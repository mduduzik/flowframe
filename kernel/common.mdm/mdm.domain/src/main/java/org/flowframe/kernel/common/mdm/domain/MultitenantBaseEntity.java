//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.12.09 at 12:50:36 AM EST 
//


package org.flowframe.kernel.common.mdm.domain;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.MappedSuperclass;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import org.flowframe.kernel.common.mdm.domain.note.Note;
import org.flowframe.kernel.common.mdm.domain.organization.Organization;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for MultitenantBaseEntity complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MultitenantBaseEntity">
 *   &lt;complexContent>
 *     &lt;extension base="{http://floframe.org/kernel/common/mdm/domain}BaseEntity">
 *       &lt;sequence>
 *         &lt;element name="tenantId" type="{http://www.w3.org/2001/XMLSchema}long"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MultitenantBaseEntity", propOrder = {
    "tenantId"
})
@MappedSuperclass
public abstract class MultitenantBaseEntity
    extends BaseEntity
    implements Equals, HashCode
{
    @ManyToOne(targetEntity = Organization.class, fetch = FetchType.EAGER, cascade={CascadeType.REFRESH})
    @JoinColumn
	protected Organization tenant;
    
    @Transient
    protected long tenantId;

    
    protected boolean tenantWide = false;
    
    /**
     * Gets the value of the tenantId property.
     * 
     */
    public long getTenantId() {
    	if (this.tenant != null)
    		return this.tenant.getId();
    	else
    		return 0;
    }

    
    public Organization getTenant() {
    	return this.tenant;
    }
    
    public void setTenant(Organization tenant) {
    	this.tenant = tenant;
    }   
    
    @Transient
    public String getTenantName() {
    	return this.tenant != null?this.tenant.getName():null;
    }  

    public boolean isTenantWide() {
		return tenantWide;
	}

	public void setTenantWide(boolean tenantWide) {
		this.tenantWide = tenantWide;
	}

	public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof MultitenantBaseEntity)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final MultitenantBaseEntity that = ((MultitenantBaseEntity) object);
        {
            long lhsTenantId;
            lhsTenantId = this.getTenantId();
            long rhsTenantId;
            rhsTenantId = that.getTenantId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tenantId", lhsTenantId), LocatorUtils.property(thatLocator, "tenantId", rhsTenantId), lhsTenantId, rhsTenantId)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            long theTenantId;
            theTenantId = this.getTenantId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tenantId", theTenantId), currentHashCode, theTenantId);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}

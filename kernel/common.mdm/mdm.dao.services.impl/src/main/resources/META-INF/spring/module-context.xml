<?xml version="1.0" encoding="UTF-8"?>
<!--
	Application context definition for GreenPages JPA.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- ========================= TRRANSCTION MANAGEMENT ========================= -->
	<!-- 
	<bean id="globalTransactionManagerId" class="org.springframework.transaction.jta.JtaTransactionManager">
	    <property name="transactionManager" ref="globalTransactionManager" />
	    <property name="userTransaction" ref="globalTransactionManager" />
	</bean>
	 -->
	
<!-- 	<bean id="myTxManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<property name="entityManagerFactory" ref="ffLoBEntityManagerFactory"/>
  	</bean> -->
	
	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!--
		Activates various annotations to be detected in bean classes: Spring's
		@Required and @Autowired, as well as JSR 250's @PostConstruct,
		@PreDestroy and @Resource (if available) and JPA's @PersistenceContext
		and @PersistenceUnit (if available).
	-->
	<context:annotation-config/>

	<!--
		Instruct Spring to perform declarative transaction management
		automatically on annotated classes.
	-->
	<tx:annotation-driven mode="aspectj" transaction-manager="globalJtaTransactionManager"/>

	<!--
		Post-processor to perform exception translation on @Repository classes (from native
		exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
	-->
	<!-- 
	<bean id="dialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
	<bean class="org.springframework.dao.support.custom.CustomPersistenceExceptionTranslator">
		<property name="jpaDialect" ref="dialect"></property>
	</bean>
	-->
	<!--
		Post-processor to perform exception translation on @Repository classes (from native
		exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
	-->
	<!-- <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/> -->
	
		
	<!--
		Will automatically be transactional due to @Transactional.
		EntityManager will be auto-injected due to @PersistenceContext.
		PersistenceExceptions will be auto-translated due to @Repository.
	-->
	<bean id="addressDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.AddressDAOImpl"/>
	<bean id="addressTypeDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.AddressTypeDAOImpl"/>
	<bean id="addressTypeAddressDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.AddressTypeAddressDAOImpl"/>
	<bean id="baseEntityDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.BaseEntityDAOImpl"/>
	<bean id="contactDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.ContactDAOImpl"/>
	<bean id="contactTypeDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.ContactTypeDAOImpl"/>
	<bean id="contactTypeContactDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.ContactTypeContactDAOImpl"/>
	<bean id="countryDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.CountryDAOImpl"/>
	<bean id="countryStateDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.CountryStateDAOImpl"/>
	<bean id="docTypeDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.documentlibrary.DocTypeDAOImpl"/>	
	<bean id="entityMetadataDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.EntityMetadataDAOImpl"/>
	<bean id="folderDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.documentlibrary.FolderDAOImpl"/>
	<bean id="orgDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.OrganizationDAOImpl" init-method="init"/>
	<bean id="entityPrefDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.preferences.EntityPreferenceDAOImpl"/>
	<bean id="prefDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.preferences.PreferencesDAOImpl" init-method="init"/>
	<bean id="noteDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.note.NoteDAOImpl"/>
	<bean id="unlocoDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.UnlocoDAOImpl"/>
	<bean id="userDao" class="org.flowframe.kernel.common.mdm.dao.services.impl.user.UserDAOImpl"/>
</beans>

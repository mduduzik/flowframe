<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>org.flowframe.etl.pentaho.server.snaps</artifactId>
        <groupId>org.flowframe</groupId>
        <version>0.0.1</version>
        <relativePath>..</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <artifactId>org.flowframe.etl.pentaho.server.snaps.main</artifactId>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1-beta-1</version>
                <configuration>
                    <packagingExcludes>WEB-INF/lib/**</packagingExcludes>
                    <archive>
                        <manifestFile>src/main/webapp/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.springsource.bundlor</groupId>
                <artifactId>com.springsource.bundlor.maven</artifactId>
                <inherited>true</inherited>
                <configuration>
                    <failOnWarnings>true</failOnWarnings>
                    <!-- used to properly set-up versions for system packages -->
                    <osgiProfilePath>${basedir}/../../../../../java6-server.profile</osgiProfilePath>
                    <bundleVersion>${project.version}</bundleVersion>
                    <!-- point to a different output path - so manifest will be regenerated
                        on each build and can be eyeballed if desired. Also for eclipse use, where
                        manifest is always needed -->
                    <outputPath>${basedir}/src/main/webapp</outputPath>
                </configuration>
                <executions>
                    <execution>
                        <!-- <phase>none</phase> -->
                        <id>build-manifest</id>
                        <goals>
                            <goal>bundlor</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <!-- Virgo -->
        <dependency>
            <groupId>org.eclipse.virgo.snaps</groupId>
            <artifactId>org.eclipse.virgo.snaps.api</artifactId>
            <version>3.6.2.RELEASE</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.virgo.mirrored</groupId>
                    <artifactId>rg.eclipse.osgi</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.virgo.mirrored</groupId>
                    <artifactId>org.eclipse.osgi</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.virgo.mirrored</groupId>
                    <artifactId>javax.servlet</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.virgo.mirrored</groupId>
                    <artifactId>javax.servlet.jsp</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.virgo.mirrored</groupId>
                    <artifactId>org.slf4j.api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.virgo.mirrored</groupId>
                    <artifactId>org.eclipse.osgi.services</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.virgo.mirrored</groupId>
                    <artifactId>org.eclipse.equinox.event</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.spring-library</artifactId>
            <version>3.1.3.RELEASE</version>
            <type>libd</type>
        </dependency>


        <!-- J2EE -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet</artifactId>
            <version>3.0.0.v201103241009</version>
            <scope>provided</scope>
        </dependency>

        <!-- Jersey -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework</groupId>
            <artifactId>jersey-test-framework-core</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>org.flowframe.etl</artifactId>
        <groupId>org.flowframe</groupId>
        <version>0.0.1</version>
        <relativePath>..</relativePath>
    </parent>
    <artifactId>org.flowframe.etl.pentaho.server</artifactId>
    <packaging>pom</packaging>
    <modules>
        <module>services</module>
        <module>plugins.manager</module>
        <module>plugins.core</module>
        <module>snaps</module>
        <module>repository</module>
        <module>carte</module>
    </modules>
    <build>
        <plugins>
            <plugin>
                <groupId>com.springsource.bundlor</groupId>
                <artifactId>com.springsource.bundlor.maven</artifactId>
                <inherited>true</inherited>
                <configuration>
                    <failOnWarnings>true</failOnWarnings>
                    <!-- used to properly set-up versions for system packages -->
                    <osgiProfilePath>${basedir}/../../../../java6-server.profile</osgiProfilePath>
                    <bundleVersion>${project.version}</bundleVersion>
                    <!-- point to a different output path - so manifest will be regenerated
                        on each build and can be eyeballed if desired. Also for eclipse use, where
                        manifest is always needed -->
                    <outputPath>${basedir}/src/main/webapp</outputPath>
                </configuration>
                <executions>
                    <execution>
                        <!-- <phase>none</phase> -->
                        <id>build-manifest</id>
                        <goals>
                            <goal>bundlor</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
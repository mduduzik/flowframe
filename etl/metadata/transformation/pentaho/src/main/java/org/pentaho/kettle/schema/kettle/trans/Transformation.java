//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.12.04 at 12:54:59 PM EST 
//


package org.pentaho.kettle.schema.kettle.trans;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.hyperjaxb3.xml.bind.JAXBContextUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{http://kettle.pentaho.org/schema/kettle/trans}tenantrecord">
 *       &lt;sequence>
 *         &lt;element name="info">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                   &lt;element name="extended_description" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                   &lt;element name="trans_version" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                   &lt;element name="directory" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="log">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="read" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="write" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="input" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="output" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="update" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="rejected" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="connection" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="table" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="step_performance_table" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="use_batchid" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                             &lt;element name="use_logfield" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="maxdate">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="connection" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="table" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="field" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                             &lt;element name="offset" type="{http://www.w3.org/2001/XMLSchema}decimal"/>
 *                             &lt;element name="maxdiff" type="{http://www.w3.org/2001/XMLSchema}decimal"/>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="size_rowset" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
 *                   &lt;element name="sleep_time_empty" type="{http://www.w3.org/2001/XMLSchema}unsignedByte"/>
 *                   &lt;element name="sleep_time_full" type="{http://www.w3.org/2001/XMLSchema}unsignedByte"/>
 *                   &lt;element name="unique_connections" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="feedback_shown" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="feedback_size" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
 *                   &lt;element name="using_thread_priorities" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="shared_objects_file" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                   &lt;element name="capture_step_performance" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="step_performance_capturing_delay" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
 *                   &lt;element name="dependencies" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="partitionschemas" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="slaveservers" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="clusterschemas" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="modified_user" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="modified_date" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="notepads" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="order">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="hop">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="from" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                             &lt;element name="to" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                             &lt;element name="enabled" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="step" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;extension base="{http://kettle.pentaho.org/schema/kettle/trans}tenantrecord">
 *                 &lt;sequence>
 *                   &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="distribute" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="copies" type="{http://www.w3.org/2001/XMLSchema}unsignedByte"/>
 *                   &lt;element name="partitioning">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="method" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                             &lt;element name="schema_name" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="filename" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="filename_field" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *                   &lt;element name="rownum_field" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *                   &lt;element name="include_filename" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="separator" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="enclosure" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="header" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="buffer_size" type="{http://www.w3.org/2001/XMLSchema}unsignedShort" minOccurs="0"/>
 *                   &lt;element name="lazy_conversion" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="add_filename_result" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="parallel" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="encoding" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="fields" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="select_unspecified" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                             &lt;element name="meta" maxOccurs="unbounded" minOccurs="0">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;sequence>
 *                                       &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                                       &lt;element name="rename" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                                       &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                                       &lt;element name="length" type="{http://www.w3.org/2001/XMLSchema}byte"/>
 *                                       &lt;element name="precision" type="{http://www.w3.org/2001/XMLSchema}byte"/>
 *                                       &lt;element name="conversion_mask" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                                       &lt;element name="date_format_lenient" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *                                       &lt;element name="encoding" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                                       &lt;element name="decimal_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                                       &lt;element name="grouping_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                                       &lt;element name="currency_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                                       &lt;element name="storage_type" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                                     &lt;/sequence>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;element name="field" maxOccurs="unbounded" minOccurs="0">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;sequence>
 *                                       &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                                       &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                                       &lt;element name="format" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                                       &lt;element name="currency" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                                       &lt;element name="decimal" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                                       &lt;element name="group" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                                       &lt;element name="length" type="{http://www.w3.org/2001/XMLSchema}unsignedByte"/>
 *                                       &lt;element name="precision" type="{http://www.w3.org/2001/XMLSchema}byte"/>
 *                                       &lt;element name="trim_type" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                                     &lt;/sequence>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="cluster_schema" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *                   &lt;element name="remotesteps">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="input" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                             &lt;element name="output" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="GUI">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="xloc" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
 *                             &lt;element name="yloc" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
 *                             &lt;element name="draw" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/extension>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="step_error_handling" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="slave-step-copy-partition-distribution" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="slave_transformation" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "info",
    "notepads",
    "order",
    "step",
    "stepErrorHandling",
    "slaveStepCopyPartitionDistribution",
    "slaveTransformation"
})
@XmlRootElement(name = "transformation")
@Entity(name = "Transformation")
@Table(name = "TRANSFORMATION")
@Inheritance(strategy = InheritanceType.JOINED)
public class Transformation
    extends Tenantrecord
    implements Equals, HashCode
{

    @XmlElement(required = true)
    protected Transformation.Info info;
    @XmlElement(required = true)
    protected String notepads;
    @XmlElement(required = true)
    protected Transformation.Order order;
    @XmlElement(required = true)
    protected List<Transformation.Step> step;
    @XmlElement(name = "step_error_handling", required = true)
    protected String stepErrorHandling;
    @XmlElement(name = "slave-step-copy-partition-distribution", required = true)
    protected String slaveStepCopyPartitionDistribution;
    @XmlElement(name = "slave_transformation", required = true)
    protected String slaveTransformation;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the info property.
     * 
     * @return
     *     possible object is
     *     {@link Transformation.Info }
     *     
     */
    @ManyToOne(targetEntity = Transformation.Info.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "INFO_TRANSFORMATION_HJID")
    public Transformation.Info getInfo() {
        return info;
    }

    /**
     * Sets the value of the info property.
     * 
     * @param value
     *     allowed object is
     *     {@link Transformation.Info }
     *     
     */
    public void setInfo(Transformation.Info value) {
        this.info = value;
    }

    /**
     * Gets the value of the notepads property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NOTEPADS", length = 255)
    public String getNotepads() {
        return notepads;
    }

    /**
     * Sets the value of the notepads property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNotepads(String value) {
        this.notepads = value;
    }

    /**
     * Gets the value of the order property.
     * 
     * @return
     *     possible object is
     *     {@link Transformation.Order }
     *     
     */
    @ManyToOne(targetEntity = Transformation.Order.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ORDER__TRANSFORMATION_HJID")
    public Transformation.Order getOrder() {
        return order;
    }

    /**
     * Sets the value of the order property.
     * 
     * @param value
     *     allowed object is
     *     {@link Transformation.Order }
     *     
     */
    public void setOrder(Transformation.Order value) {
        this.order = value;
    }

    /**
     * Gets the value of the step property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the step property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStep().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Transformation.Step }
     * 
     * 
     */
    @OneToMany(targetEntity = Transformation.Step.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STEP_TRANSFORMATION_HJID")
    public List<Transformation.Step> getStep() {
        if (step == null) {
            step = new ArrayList<Transformation.Step>();
        }
        return this.step;
    }

    /**
     * 
     * 
     */
    public void setStep(List<Transformation.Step> step) {
        this.step = step;
    }

    /**
     * Gets the value of the stepErrorHandling property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STEPERRORHANDLING", length = 255)
    public String getStepErrorHandling() {
        return stepErrorHandling;
    }

    /**
     * Sets the value of the stepErrorHandling property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStepErrorHandling(String value) {
        this.stepErrorHandling = value;
    }

    /**
     * Gets the value of the slaveStepCopyPartitionDistribution property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SLAVESTEPCOPYPARTITIONDISTRI_0", length = 255)
    public String getSlaveStepCopyPartitionDistribution() {
        return slaveStepCopyPartitionDistribution;
    }

    /**
     * Sets the value of the slaveStepCopyPartitionDistribution property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSlaveStepCopyPartitionDistribution(String value) {
        this.slaveStepCopyPartitionDistribution = value;
    }

    /**
     * Gets the value of the slaveTransformation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SLAVETRANSFORMATION", length = 255)
    public String getSlaveTransformation() {
        return slaveTransformation;
    }

    /**
     * Sets the value of the slaveTransformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSlaveTransformation(String value) {
        this.slaveTransformation = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Transformation)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Transformation that = ((Transformation) object);
        {
            Transformation.Info lhsInfo;
            lhsInfo = this.getInfo();
            Transformation.Info rhsInfo;
            rhsInfo = that.getInfo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "info", lhsInfo), LocatorUtils.property(thatLocator, "info", rhsInfo), lhsInfo, rhsInfo)) {
                return false;
            }
        }
        {
            String lhsNotepads;
            lhsNotepads = this.getNotepads();
            String rhsNotepads;
            rhsNotepads = that.getNotepads();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notepads", lhsNotepads), LocatorUtils.property(thatLocator, "notepads", rhsNotepads), lhsNotepads, rhsNotepads)) {
                return false;
            }
        }
        {
            Transformation.Order lhsOrder;
            lhsOrder = this.getOrder();
            Transformation.Order rhsOrder;
            rhsOrder = that.getOrder();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "order", lhsOrder), LocatorUtils.property(thatLocator, "order", rhsOrder), lhsOrder, rhsOrder)) {
                return false;
            }
        }
        {
            List<Transformation.Step> lhsStep;
            lhsStep = this.getStep();
            List<Transformation.Step> rhsStep;
            rhsStep = that.getStep();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "step", lhsStep), LocatorUtils.property(thatLocator, "step", rhsStep), lhsStep, rhsStep)) {
                return false;
            }
        }
        {
            String lhsStepErrorHandling;
            lhsStepErrorHandling = this.getStepErrorHandling();
            String rhsStepErrorHandling;
            rhsStepErrorHandling = that.getStepErrorHandling();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stepErrorHandling", lhsStepErrorHandling), LocatorUtils.property(thatLocator, "stepErrorHandling", rhsStepErrorHandling), lhsStepErrorHandling, rhsStepErrorHandling)) {
                return false;
            }
        }
        {
            String lhsSlaveStepCopyPartitionDistribution;
            lhsSlaveStepCopyPartitionDistribution = this.getSlaveStepCopyPartitionDistribution();
            String rhsSlaveStepCopyPartitionDistribution;
            rhsSlaveStepCopyPartitionDistribution = that.getSlaveStepCopyPartitionDistribution();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "slaveStepCopyPartitionDistribution", lhsSlaveStepCopyPartitionDistribution), LocatorUtils.property(thatLocator, "slaveStepCopyPartitionDistribution", rhsSlaveStepCopyPartitionDistribution), lhsSlaveStepCopyPartitionDistribution, rhsSlaveStepCopyPartitionDistribution)) {
                return false;
            }
        }
        {
            String lhsSlaveTransformation;
            lhsSlaveTransformation = this.getSlaveTransformation();
            String rhsSlaveTransformation;
            rhsSlaveTransformation = that.getSlaveTransformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "slaveTransformation", lhsSlaveTransformation), LocatorUtils.property(thatLocator, "slaveTransformation", rhsSlaveTransformation), lhsSlaveTransformation, rhsSlaveTransformation)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Transformation.Info theInfo;
            theInfo = this.getInfo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "info", theInfo), currentHashCode, theInfo);
        }
        {
            String theNotepads;
            theNotepads = this.getNotepads();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notepads", theNotepads), currentHashCode, theNotepads);
        }
        {
            Transformation.Order theOrder;
            theOrder = this.getOrder();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "order", theOrder), currentHashCode, theOrder);
        }
        {
            List<Transformation.Step> theStep;
            theStep = this.getStep();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "step", theStep), currentHashCode, theStep);
        }
        {
            String theStepErrorHandling;
            theStepErrorHandling = this.getStepErrorHandling();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stepErrorHandling", theStepErrorHandling), currentHashCode, theStepErrorHandling);
        }
        {
            String theSlaveStepCopyPartitionDistribution;
            theSlaveStepCopyPartitionDistribution = this.getSlaveStepCopyPartitionDistribution();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "slaveStepCopyPartitionDistribution", theSlaveStepCopyPartitionDistribution), currentHashCode, theSlaveStepCopyPartitionDistribution);
        }
        {
            String theSlaveTransformation;
            theSlaveTransformation = this.getSlaveTransformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "slaveTransformation", theSlaveTransformation), currentHashCode, theSlaveTransformation);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *         &lt;element name="extended_description" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *         &lt;element name="trans_version" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *         &lt;element name="directory" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="log">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="read" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="write" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="input" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="output" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="update" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="rejected" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="connection" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="table" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="step_performance_table" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="use_batchid" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                   &lt;element name="use_logfield" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="maxdate">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="connection" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="table" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="field" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                   &lt;element name="offset" type="{http://www.w3.org/2001/XMLSchema}decimal"/>
     *                   &lt;element name="maxdiff" type="{http://www.w3.org/2001/XMLSchema}decimal"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="size_rowset" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
     *         &lt;element name="sleep_time_empty" type="{http://www.w3.org/2001/XMLSchema}unsignedByte"/>
     *         &lt;element name="sleep_time_full" type="{http://www.w3.org/2001/XMLSchema}unsignedByte"/>
     *         &lt;element name="unique_connections" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="feedback_shown" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="feedback_size" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
     *         &lt;element name="using_thread_priorities" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="shared_objects_file" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *         &lt;element name="capture_step_performance" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="step_performance_capturing_delay" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
     *         &lt;element name="dependencies" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="partitionschemas" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="slaveservers" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="clusterschemas" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="modified_user" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="modified_date" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "name",
        "description",
        "extendedDescription",
        "transVersion",
        "directory",
        "log",
        "maxdate",
        "sizeRowset",
        "sleepTimeEmpty",
        "sleepTimeFull",
        "uniqueConnections",
        "feedbackShown",
        "feedbackSize",
        "usingThreadPriorities",
        "sharedObjectsFile",
        "captureStepPerformance",
        "stepPerformanceCapturingDelay",
        "dependencies",
        "partitionschemas",
        "slaveservers",
        "clusterschemas",
        "modifiedUser",
        "modifiedDate"
    })
    @Entity(name = "Transformation$Info")
    @Table(name = "INFO")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class Info
        implements Equals, HashCode
    {

        @XmlElement(required = true)
        protected String name;
        @XmlElement(required = true)
        protected Object description;
        @XmlElement(name = "extended_description", required = true)
        protected Object extendedDescription;
        @XmlElement(name = "trans_version", required = true)
        protected Object transVersion;
        @XmlElement(required = true)
        protected String directory;
        @XmlElement(required = true)
        protected Transformation.Info.Log log;
        @XmlElement(required = true)
        protected Transformation.Info.Maxdate maxdate;
        @XmlElement(name = "size_rowset")
        @XmlSchemaType(name = "unsignedShort")
        protected int sizeRowset;
        @XmlElement(name = "sleep_time_empty")
        @XmlSchemaType(name = "unsignedByte")
        protected short sleepTimeEmpty;
        @XmlElement(name = "sleep_time_full")
        @XmlSchemaType(name = "unsignedByte")
        protected short sleepTimeFull;
        @XmlElement(name = "unique_connections", required = true)
        protected String uniqueConnections;
        @XmlElement(name = "feedback_shown", required = true)
        protected String feedbackShown;
        @XmlElement(name = "feedback_size")
        @XmlSchemaType(name = "unsignedShort")
        protected int feedbackSize;
        @XmlElement(name = "using_thread_priorities", required = true)
        protected String usingThreadPriorities;
        @XmlElement(name = "shared_objects_file", required = true)
        protected Object sharedObjectsFile;
        @XmlElement(name = "capture_step_performance", required = true)
        protected String captureStepPerformance;
        @XmlElement(name = "step_performance_capturing_delay")
        @XmlSchemaType(name = "unsignedShort")
        protected int stepPerformanceCapturingDelay;
        @XmlElement(required = true)
        protected String dependencies;
        @XmlElement(required = true)
        protected String partitionschemas;
        @XmlElement(required = true)
        protected String slaveservers;
        @XmlElement(required = true)
        protected String clusterschemas;
        @XmlElement(name = "modified_user", required = true)
        protected String modifiedUser;
        @XmlElement(name = "modified_date", required = true)
        protected String modifiedDate;
        @XmlAttribute(name = "Hjid")
        protected Long hjid;
        public final static String DescriptionObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
        public final static String ExtendedDescriptionObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
        public final static String TransVersionObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
        public final static String SharedObjectsFileObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";

        /**
         * Gets the value of the name property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "NAME_", length = 255)
        public String getName() {
            return name;
        }

        /**
         * Sets the value of the name property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setName(String value) {
            this.name = value;
        }

        /**
         * Gets the value of the description property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        @Transient
        public Object getDescription() {
            return description;
        }

        /**
         * Sets the value of the description property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setDescription(Object value) {
            this.description = value;
        }

        /**
         * Gets the value of the extendedDescription property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        @Transient
        public Object getExtendedDescription() {
            return extendedDescription;
        }

        /**
         * Sets the value of the extendedDescription property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setExtendedDescription(Object value) {
            this.extendedDescription = value;
        }

        /**
         * Gets the value of the transVersion property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        @Transient
        public Object getTransVersion() {
            return transVersion;
        }

        /**
         * Sets the value of the transVersion property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setTransVersion(Object value) {
            this.transVersion = value;
        }

        /**
         * Gets the value of the directory property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "DIRECTORY", length = 255)
        public String getDirectory() {
            return directory;
        }

        /**
         * Sets the value of the directory property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDirectory(String value) {
            this.directory = value;
        }

        /**
         * Gets the value of the log property.
         * 
         * @return
         *     possible object is
         *     {@link Transformation.Info.Log }
         *     
         */
        @ManyToOne(targetEntity = org.pentaho.kettle.schema.kettle.trans.Transformation.Info.Log.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "LOG_INFO_HJID")
        public Transformation.Info.Log getLog() {
            return log;
        }

        /**
         * Sets the value of the log property.
         * 
         * @param value
         *     allowed object is
         *     {@link Transformation.Info.Log }
         *     
         */
        public void setLog(Transformation.Info.Log value) {
            this.log = value;
        }

        /**
         * Gets the value of the maxdate property.
         * 
         * @return
         *     possible object is
         *     {@link Transformation.Info.Maxdate }
         *     
         */
        @ManyToOne(targetEntity = org.pentaho.kettle.schema.kettle.trans.Transformation.Info.Maxdate.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "MAXDATE_INFO_HJID")
        public Transformation.Info.Maxdate getMaxdate() {
            return maxdate;
        }

        /**
         * Sets the value of the maxdate property.
         * 
         * @param value
         *     allowed object is
         *     {@link Transformation.Info.Maxdate }
         *     
         */
        public void setMaxdate(Transformation.Info.Maxdate value) {
            this.maxdate = value;
        }

        /**
         * Gets the value of the sizeRowset property.
         * 
         */
        @Basic
        @Column(name = "SIZEROWSET", precision = 5, scale = 0)
        public int getSizeRowset() {
            return sizeRowset;
        }

        /**
         * Sets the value of the sizeRowset property.
         * 
         */
        public void setSizeRowset(int value) {
            this.sizeRowset = value;
        }

        /**
         * Gets the value of the sleepTimeEmpty property.
         * 
         */
        @Basic
        @Column(name = "SLEEPTIMEEMPTY", precision = 3, scale = 0)
        public short getSleepTimeEmpty() {
            return sleepTimeEmpty;
        }

        /**
         * Sets the value of the sleepTimeEmpty property.
         * 
         */
        public void setSleepTimeEmpty(short value) {
            this.sleepTimeEmpty = value;
        }

        /**
         * Gets the value of the sleepTimeFull property.
         * 
         */
        @Basic
        @Column(name = "SLEEPTIMEFULL", precision = 3, scale = 0)
        public short getSleepTimeFull() {
            return sleepTimeFull;
        }

        /**
         * Sets the value of the sleepTimeFull property.
         * 
         */
        public void setSleepTimeFull(short value) {
            this.sleepTimeFull = value;
        }

        /**
         * Gets the value of the uniqueConnections property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "UNIQUECONNECTIONS", length = 255)
        public String getUniqueConnections() {
            return uniqueConnections;
        }

        /**
         * Sets the value of the uniqueConnections property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setUniqueConnections(String value) {
            this.uniqueConnections = value;
        }

        /**
         * Gets the value of the feedbackShown property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "FEEDBACKSHOWN", length = 255)
        public String getFeedbackShown() {
            return feedbackShown;
        }

        /**
         * Sets the value of the feedbackShown property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setFeedbackShown(String value) {
            this.feedbackShown = value;
        }

        /**
         * Gets the value of the feedbackSize property.
         * 
         */
        @Basic
        @Column(name = "FEEDBACKSIZE", precision = 5, scale = 0)
        public int getFeedbackSize() {
            return feedbackSize;
        }

        /**
         * Sets the value of the feedbackSize property.
         * 
         */
        public void setFeedbackSize(int value) {
            this.feedbackSize = value;
        }

        /**
         * Gets the value of the usingThreadPriorities property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "USINGTHREADPRIORITIES", length = 255)
        public String getUsingThreadPriorities() {
            return usingThreadPriorities;
        }

        /**
         * Sets the value of the usingThreadPriorities property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setUsingThreadPriorities(String value) {
            this.usingThreadPriorities = value;
        }

        /**
         * Gets the value of the sharedObjectsFile property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        @Transient
        public Object getSharedObjectsFile() {
            return sharedObjectsFile;
        }

        /**
         * Sets the value of the sharedObjectsFile property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setSharedObjectsFile(Object value) {
            this.sharedObjectsFile = value;
        }

        /**
         * Gets the value of the captureStepPerformance property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "CAPTURESTEPPERFORMANCE", length = 255)
        public String getCaptureStepPerformance() {
            return captureStepPerformance;
        }

        /**
         * Sets the value of the captureStepPerformance property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCaptureStepPerformance(String value) {
            this.captureStepPerformance = value;
        }

        /**
         * Gets the value of the stepPerformanceCapturingDelay property.
         * 
         */
        @Basic
        @Column(name = "STEPPERFORMANCECAPTURINGDELAY", precision = 5, scale = 0)
        public int getStepPerformanceCapturingDelay() {
            return stepPerformanceCapturingDelay;
        }

        /**
         * Sets the value of the stepPerformanceCapturingDelay property.
         * 
         */
        public void setStepPerformanceCapturingDelay(int value) {
            this.stepPerformanceCapturingDelay = value;
        }

        /**
         * Gets the value of the dependencies property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "DEPENDENCIES", length = 255)
        public String getDependencies() {
            return dependencies;
        }

        /**
         * Sets the value of the dependencies property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDependencies(String value) {
            this.dependencies = value;
        }

        /**
         * Gets the value of the partitionschemas property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "PARTITIONSCHEMAS", length = 255)
        public String getPartitionschemas() {
            return partitionschemas;
        }

        /**
         * Sets the value of the partitionschemas property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPartitionschemas(String value) {
            this.partitionschemas = value;
        }

        /**
         * Gets the value of the slaveservers property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "SLAVESERVERS", length = 255)
        public String getSlaveservers() {
            return slaveservers;
        }

        /**
         * Sets the value of the slaveservers property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setSlaveservers(String value) {
            this.slaveservers = value;
        }

        /**
         * Gets the value of the clusterschemas property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "CLUSTERSCHEMAS", length = 255)
        public String getClusterschemas() {
            return clusterschemas;
        }

        /**
         * Sets the value of the clusterschemas property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setClusterschemas(String value) {
            this.clusterschemas = value;
        }

        /**
         * Gets the value of the modifiedUser property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "MODIFIEDUSER", length = 255)
        public String getModifiedUser() {
            return modifiedUser;
        }

        /**
         * Sets the value of the modifiedUser property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setModifiedUser(String value) {
            this.modifiedUser = value;
        }

        /**
         * Gets the value of the modifiedDate property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "MODIFIEDDATE", length = 255)
        public String getModifiedDate() {
            return modifiedDate;
        }

        /**
         * Sets the value of the modifiedDate property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setModifiedDate(String value) {
            this.modifiedDate = value;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

        @Basic
        @Column(name = "DESCRIPTIONOBJECT")
        public String getDescriptionObject() {
            if (JAXBContextUtils.isMarshallable(DescriptionObjectContextPath, this.getDescription())) {
                return JAXBContextUtils.marshal(DescriptionObjectContextPath, this.getDescription());
            } else {
                return null;
            }
        }

        public void setDescriptionObject(String target) {
            if (target!= null) {
                setDescription(JAXBContextUtils.unmarshal(DescriptionObjectContextPath, target));
            }
        }

        @Basic
        @Column(name = "EXTENDEDDESCRIPTIONOBJECT")
        public String getExtendedDescriptionObject() {
            if (JAXBContextUtils.isMarshallable(ExtendedDescriptionObjectContextPath, this.getExtendedDescription())) {
                return JAXBContextUtils.marshal(ExtendedDescriptionObjectContextPath, this.getExtendedDescription());
            } else {
                return null;
            }
        }

        public void setExtendedDescriptionObject(String target) {
            if (target!= null) {
                setExtendedDescription(JAXBContextUtils.unmarshal(ExtendedDescriptionObjectContextPath, target));
            }
        }

        @Basic
        @Column(name = "TRANSVERSIONOBJECT")
        public String getTransVersionObject() {
            if (JAXBContextUtils.isMarshallable(TransVersionObjectContextPath, this.getTransVersion())) {
                return JAXBContextUtils.marshal(TransVersionObjectContextPath, this.getTransVersion());
            } else {
                return null;
            }
        }

        public void setTransVersionObject(String target) {
            if (target!= null) {
                setTransVersion(JAXBContextUtils.unmarshal(TransVersionObjectContextPath, target));
            }
        }

        @Basic
        @Column(name = "SHAREDOBJECTSFILEOBJECT")
        public String getSharedObjectsFileObject() {
            if (JAXBContextUtils.isMarshallable(SharedObjectsFileObjectContextPath, this.getSharedObjectsFile())) {
                return JAXBContextUtils.marshal(SharedObjectsFileObjectContextPath, this.getSharedObjectsFile());
            } else {
                return null;
            }
        }

        public void setSharedObjectsFileObject(String target) {
            if (target!= null) {
                setSharedObjectsFile(JAXBContextUtils.unmarshal(SharedObjectsFileObjectContextPath, target));
            }
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof Transformation.Info)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Transformation.Info that = ((Transformation.Info) object);
            {
                String lhsName;
                lhsName = this.getName();
                String rhsName;
                rhsName = that.getName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                    return false;
                }
            }
            {
                Object lhsDescription;
                lhsDescription = this.getDescription();
                Object rhsDescription;
                rhsDescription = that.getDescription();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                    return false;
                }
            }
            {
                Object lhsExtendedDescription;
                lhsExtendedDescription = this.getExtendedDescription();
                Object rhsExtendedDescription;
                rhsExtendedDescription = that.getExtendedDescription();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "extendedDescription", lhsExtendedDescription), LocatorUtils.property(thatLocator, "extendedDescription", rhsExtendedDescription), lhsExtendedDescription, rhsExtendedDescription)) {
                    return false;
                }
            }
            {
                Object lhsTransVersion;
                lhsTransVersion = this.getTransVersion();
                Object rhsTransVersion;
                rhsTransVersion = that.getTransVersion();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "transVersion", lhsTransVersion), LocatorUtils.property(thatLocator, "transVersion", rhsTransVersion), lhsTransVersion, rhsTransVersion)) {
                    return false;
                }
            }
            {
                String lhsDirectory;
                lhsDirectory = this.getDirectory();
                String rhsDirectory;
                rhsDirectory = that.getDirectory();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "directory", lhsDirectory), LocatorUtils.property(thatLocator, "directory", rhsDirectory), lhsDirectory, rhsDirectory)) {
                    return false;
                }
            }
            {
                Transformation.Info.Log lhsLog;
                lhsLog = this.getLog();
                Transformation.Info.Log rhsLog;
                rhsLog = that.getLog();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "log", lhsLog), LocatorUtils.property(thatLocator, "log", rhsLog), lhsLog, rhsLog)) {
                    return false;
                }
            }
            {
                Transformation.Info.Maxdate lhsMaxdate;
                lhsMaxdate = this.getMaxdate();
                Transformation.Info.Maxdate rhsMaxdate;
                rhsMaxdate = that.getMaxdate();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "maxdate", lhsMaxdate), LocatorUtils.property(thatLocator, "maxdate", rhsMaxdate), lhsMaxdate, rhsMaxdate)) {
                    return false;
                }
            }
            {
                int lhsSizeRowset;
                lhsSizeRowset = this.getSizeRowset();
                int rhsSizeRowset;
                rhsSizeRowset = that.getSizeRowset();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "sizeRowset", lhsSizeRowset), LocatorUtils.property(thatLocator, "sizeRowset", rhsSizeRowset), lhsSizeRowset, rhsSizeRowset)) {
                    return false;
                }
            }
            {
                short lhsSleepTimeEmpty;
                lhsSleepTimeEmpty = this.getSleepTimeEmpty();
                short rhsSleepTimeEmpty;
                rhsSleepTimeEmpty = that.getSleepTimeEmpty();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "sleepTimeEmpty", lhsSleepTimeEmpty), LocatorUtils.property(thatLocator, "sleepTimeEmpty", rhsSleepTimeEmpty), lhsSleepTimeEmpty, rhsSleepTimeEmpty)) {
                    return false;
                }
            }
            {
                short lhsSleepTimeFull;
                lhsSleepTimeFull = this.getSleepTimeFull();
                short rhsSleepTimeFull;
                rhsSleepTimeFull = that.getSleepTimeFull();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "sleepTimeFull", lhsSleepTimeFull), LocatorUtils.property(thatLocator, "sleepTimeFull", rhsSleepTimeFull), lhsSleepTimeFull, rhsSleepTimeFull)) {
                    return false;
                }
            }
            {
                String lhsUniqueConnections;
                lhsUniqueConnections = this.getUniqueConnections();
                String rhsUniqueConnections;
                rhsUniqueConnections = that.getUniqueConnections();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "uniqueConnections", lhsUniqueConnections), LocatorUtils.property(thatLocator, "uniqueConnections", rhsUniqueConnections), lhsUniqueConnections, rhsUniqueConnections)) {
                    return false;
                }
            }
            {
                String lhsFeedbackShown;
                lhsFeedbackShown = this.getFeedbackShown();
                String rhsFeedbackShown;
                rhsFeedbackShown = that.getFeedbackShown();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "feedbackShown", lhsFeedbackShown), LocatorUtils.property(thatLocator, "feedbackShown", rhsFeedbackShown), lhsFeedbackShown, rhsFeedbackShown)) {
                    return false;
                }
            }
            {
                int lhsFeedbackSize;
                lhsFeedbackSize = this.getFeedbackSize();
                int rhsFeedbackSize;
                rhsFeedbackSize = that.getFeedbackSize();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "feedbackSize", lhsFeedbackSize), LocatorUtils.property(thatLocator, "feedbackSize", rhsFeedbackSize), lhsFeedbackSize, rhsFeedbackSize)) {
                    return false;
                }
            }
            {
                String lhsUsingThreadPriorities;
                lhsUsingThreadPriorities = this.getUsingThreadPriorities();
                String rhsUsingThreadPriorities;
                rhsUsingThreadPriorities = that.getUsingThreadPriorities();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "usingThreadPriorities", lhsUsingThreadPriorities), LocatorUtils.property(thatLocator, "usingThreadPriorities", rhsUsingThreadPriorities), lhsUsingThreadPriorities, rhsUsingThreadPriorities)) {
                    return false;
                }
            }
            {
                Object lhsSharedObjectsFile;
                lhsSharedObjectsFile = this.getSharedObjectsFile();
                Object rhsSharedObjectsFile;
                rhsSharedObjectsFile = that.getSharedObjectsFile();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "sharedObjectsFile", lhsSharedObjectsFile), LocatorUtils.property(thatLocator, "sharedObjectsFile", rhsSharedObjectsFile), lhsSharedObjectsFile, rhsSharedObjectsFile)) {
                    return false;
                }
            }
            {
                String lhsCaptureStepPerformance;
                lhsCaptureStepPerformance = this.getCaptureStepPerformance();
                String rhsCaptureStepPerformance;
                rhsCaptureStepPerformance = that.getCaptureStepPerformance();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "captureStepPerformance", lhsCaptureStepPerformance), LocatorUtils.property(thatLocator, "captureStepPerformance", rhsCaptureStepPerformance), lhsCaptureStepPerformance, rhsCaptureStepPerformance)) {
                    return false;
                }
            }
            {
                int lhsStepPerformanceCapturingDelay;
                lhsStepPerformanceCapturingDelay = this.getStepPerformanceCapturingDelay();
                int rhsStepPerformanceCapturingDelay;
                rhsStepPerformanceCapturingDelay = that.getStepPerformanceCapturingDelay();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "stepPerformanceCapturingDelay", lhsStepPerformanceCapturingDelay), LocatorUtils.property(thatLocator, "stepPerformanceCapturingDelay", rhsStepPerformanceCapturingDelay), lhsStepPerformanceCapturingDelay, rhsStepPerformanceCapturingDelay)) {
                    return false;
                }
            }
            {
                String lhsDependencies;
                lhsDependencies = this.getDependencies();
                String rhsDependencies;
                rhsDependencies = that.getDependencies();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "dependencies", lhsDependencies), LocatorUtils.property(thatLocator, "dependencies", rhsDependencies), lhsDependencies, rhsDependencies)) {
                    return false;
                }
            }
            {
                String lhsPartitionschemas;
                lhsPartitionschemas = this.getPartitionschemas();
                String rhsPartitionschemas;
                rhsPartitionschemas = that.getPartitionschemas();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "partitionschemas", lhsPartitionschemas), LocatorUtils.property(thatLocator, "partitionschemas", rhsPartitionschemas), lhsPartitionschemas, rhsPartitionschemas)) {
                    return false;
                }
            }
            {
                String lhsSlaveservers;
                lhsSlaveservers = this.getSlaveservers();
                String rhsSlaveservers;
                rhsSlaveservers = that.getSlaveservers();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "slaveservers", lhsSlaveservers), LocatorUtils.property(thatLocator, "slaveservers", rhsSlaveservers), lhsSlaveservers, rhsSlaveservers)) {
                    return false;
                }
            }
            {
                String lhsClusterschemas;
                lhsClusterschemas = this.getClusterschemas();
                String rhsClusterschemas;
                rhsClusterschemas = that.getClusterschemas();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "clusterschemas", lhsClusterschemas), LocatorUtils.property(thatLocator, "clusterschemas", rhsClusterschemas), lhsClusterschemas, rhsClusterschemas)) {
                    return false;
                }
            }
            {
                String lhsModifiedUser;
                lhsModifiedUser = this.getModifiedUser();
                String rhsModifiedUser;
                rhsModifiedUser = that.getModifiedUser();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "modifiedUser", lhsModifiedUser), LocatorUtils.property(thatLocator, "modifiedUser", rhsModifiedUser), lhsModifiedUser, rhsModifiedUser)) {
                    return false;
                }
            }
            {
                String lhsModifiedDate;
                lhsModifiedDate = this.getModifiedDate();
                String rhsModifiedDate;
                rhsModifiedDate = that.getModifiedDate();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "modifiedDate", lhsModifiedDate), LocatorUtils.property(thatLocator, "modifiedDate", rhsModifiedDate), lhsModifiedDate, rhsModifiedDate)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theName;
                theName = this.getName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
            }
            {
                Object theDescription;
                theDescription = this.getDescription();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
            }
            {
                Object theExtendedDescription;
                theExtendedDescription = this.getExtendedDescription();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extendedDescription", theExtendedDescription), currentHashCode, theExtendedDescription);
            }
            {
                Object theTransVersion;
                theTransVersion = this.getTransVersion();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transVersion", theTransVersion), currentHashCode, theTransVersion);
            }
            {
                String theDirectory;
                theDirectory = this.getDirectory();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "directory", theDirectory), currentHashCode, theDirectory);
            }
            {
                Transformation.Info.Log theLog;
                theLog = this.getLog();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "log", theLog), currentHashCode, theLog);
            }
            {
                Transformation.Info.Maxdate theMaxdate;
                theMaxdate = this.getMaxdate();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxdate", theMaxdate), currentHashCode, theMaxdate);
            }
            {
                int theSizeRowset;
                theSizeRowset = this.getSizeRowset();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sizeRowset", theSizeRowset), currentHashCode, theSizeRowset);
            }
            {
                short theSleepTimeEmpty;
                theSleepTimeEmpty = this.getSleepTimeEmpty();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sleepTimeEmpty", theSleepTimeEmpty), currentHashCode, theSleepTimeEmpty);
            }
            {
                short theSleepTimeFull;
                theSleepTimeFull = this.getSleepTimeFull();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sleepTimeFull", theSleepTimeFull), currentHashCode, theSleepTimeFull);
            }
            {
                String theUniqueConnections;
                theUniqueConnections = this.getUniqueConnections();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uniqueConnections", theUniqueConnections), currentHashCode, theUniqueConnections);
            }
            {
                String theFeedbackShown;
                theFeedbackShown = this.getFeedbackShown();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "feedbackShown", theFeedbackShown), currentHashCode, theFeedbackShown);
            }
            {
                int theFeedbackSize;
                theFeedbackSize = this.getFeedbackSize();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "feedbackSize", theFeedbackSize), currentHashCode, theFeedbackSize);
            }
            {
                String theUsingThreadPriorities;
                theUsingThreadPriorities = this.getUsingThreadPriorities();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "usingThreadPriorities", theUsingThreadPriorities), currentHashCode, theUsingThreadPriorities);
            }
            {
                Object theSharedObjectsFile;
                theSharedObjectsFile = this.getSharedObjectsFile();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sharedObjectsFile", theSharedObjectsFile), currentHashCode, theSharedObjectsFile);
            }
            {
                String theCaptureStepPerformance;
                theCaptureStepPerformance = this.getCaptureStepPerformance();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "captureStepPerformance", theCaptureStepPerformance), currentHashCode, theCaptureStepPerformance);
            }
            {
                int theStepPerformanceCapturingDelay;
                theStepPerformanceCapturingDelay = this.getStepPerformanceCapturingDelay();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stepPerformanceCapturingDelay", theStepPerformanceCapturingDelay), currentHashCode, theStepPerformanceCapturingDelay);
            }
            {
                String theDependencies;
                theDependencies = this.getDependencies();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dependencies", theDependencies), currentHashCode, theDependencies);
            }
            {
                String thePartitionschemas;
                thePartitionschemas = this.getPartitionschemas();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partitionschemas", thePartitionschemas), currentHashCode, thePartitionschemas);
            }
            {
                String theSlaveservers;
                theSlaveservers = this.getSlaveservers();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "slaveservers", theSlaveservers), currentHashCode, theSlaveservers);
            }
            {
                String theClusterschemas;
                theClusterschemas = this.getClusterschemas();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "clusterschemas", theClusterschemas), currentHashCode, theClusterschemas);
            }
            {
                String theModifiedUser;
                theModifiedUser = this.getModifiedUser();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modifiedUser", theModifiedUser), currentHashCode, theModifiedUser);
            }
            {
                String theModifiedDate;
                theModifiedDate = this.getModifiedDate();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modifiedDate", theModifiedDate), currentHashCode, theModifiedDate);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="read" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="write" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="input" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="output" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="update" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="rejected" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="connection" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="table" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="step_performance_table" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="use_batchid" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *         &lt;element name="use_logfield" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "read",
            "write",
            "input",
            "output",
            "update",
            "rejected",
            "connection",
            "table",
            "stepPerformanceTable",
            "useBatchid",
            "useLogfield"
        })
        @Entity(name = "Transformation$Info$Log")
        @Table(name = "LOG")
        @Inheritance(strategy = InheritanceType.JOINED)
        public static class Log
            implements Equals, HashCode
        {

            @XmlElement(required = true)
            protected Object read;
            @XmlElement(required = true)
            protected Object write;
            @XmlElement(required = true)
            protected Object input;
            @XmlElement(required = true)
            protected Object output;
            @XmlElement(required = true)
            protected Object update;
            @XmlElement(required = true)
            protected Object rejected;
            @XmlElement(required = true)
            protected Object connection;
            @XmlElement(required = true)
            protected Object table;
            @XmlElement(name = "step_performance_table", required = true)
            protected Object stepPerformanceTable;
            @XmlElement(name = "use_batchid", required = true)
            protected String useBatchid;
            @XmlElement(name = "use_logfield", required = true)
            protected String useLogfield;
            @XmlAttribute(name = "Hjid")
            protected Long hjid;
            public final static String ReadObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
            public final static String WriteObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
            public final static String InputObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
            public final static String OutputObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
            public final static String UpdateObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
            public final static String RejectedObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
            public final static String ConnectionObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
            public final static String TableObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
            public final static String StepPerformanceTableObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";

            /**
             * Gets the value of the read property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getRead() {
                return read;
            }

            /**
             * Sets the value of the read property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setRead(Object value) {
                this.read = value;
            }

            /**
             * Gets the value of the write property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getWrite() {
                return write;
            }

            /**
             * Sets the value of the write property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setWrite(Object value) {
                this.write = value;
            }

            /**
             * Gets the value of the input property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getInput() {
                return input;
            }

            /**
             * Sets the value of the input property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setInput(Object value) {
                this.input = value;
            }

            /**
             * Gets the value of the output property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getOutput() {
                return output;
            }

            /**
             * Sets the value of the output property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setOutput(Object value) {
                this.output = value;
            }

            /**
             * Gets the value of the update property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getUpdate() {
                return update;
            }

            /**
             * Sets the value of the update property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setUpdate(Object value) {
                this.update = value;
            }

            /**
             * Gets the value of the rejected property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getRejected() {
                return rejected;
            }

            /**
             * Sets the value of the rejected property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setRejected(Object value) {
                this.rejected = value;
            }

            /**
             * Gets the value of the connection property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getConnection() {
                return connection;
            }

            /**
             * Sets the value of the connection property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setConnection(Object value) {
                this.connection = value;
            }

            /**
             * Gets the value of the table property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getTable() {
                return table;
            }

            /**
             * Sets the value of the table property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setTable(Object value) {
                this.table = value;
            }

            /**
             * Gets the value of the stepPerformanceTable property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getStepPerformanceTable() {
                return stepPerformanceTable;
            }

            /**
             * Sets the value of the stepPerformanceTable property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setStepPerformanceTable(Object value) {
                this.stepPerformanceTable = value;
            }

            /**
             * Gets the value of the useBatchid property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "USEBATCHID", length = 255)
            public String getUseBatchid() {
                return useBatchid;
            }

            /**
             * Sets the value of the useBatchid property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setUseBatchid(String value) {
                this.useBatchid = value;
            }

            /**
             * Gets the value of the useLogfield property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "USELOGFIELD", length = 255)
            public String getUseLogfield() {
                return useLogfield;
            }

            /**
             * Sets the value of the useLogfield property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setUseLogfield(String value) {
                this.useLogfield = value;
            }

            /**
             * Gets the value of the hjid property.
             * 
             * @return
             *     possible object is
             *     {@link Long }
             *     
             */
            @Id
            @Column(name = "HJID")
            @GeneratedValue(strategy = GenerationType.AUTO)
            public Long getHjid() {
                return hjid;
            }

            /**
             * Sets the value of the hjid property.
             * 
             * @param value
             *     allowed object is
             *     {@link Long }
             *     
             */
            public void setHjid(Long value) {
                this.hjid = value;
            }

            @Basic
            @Column(name = "READOBJECT")
            public String getReadObject() {
                if (JAXBContextUtils.isMarshallable(ReadObjectContextPath, this.getRead())) {
                    return JAXBContextUtils.marshal(ReadObjectContextPath, this.getRead());
                } else {
                    return null;
                }
            }

            public void setReadObject(String target) {
                if (target!= null) {
                    setRead(JAXBContextUtils.unmarshal(ReadObjectContextPath, target));
                }
            }

            @Basic
            @Column(name = "WRITEOBJECT")
            public String getWriteObject() {
                if (JAXBContextUtils.isMarshallable(WriteObjectContextPath, this.getWrite())) {
                    return JAXBContextUtils.marshal(WriteObjectContextPath, this.getWrite());
                } else {
                    return null;
                }
            }

            public void setWriteObject(String target) {
                if (target!= null) {
                    setWrite(JAXBContextUtils.unmarshal(WriteObjectContextPath, target));
                }
            }

            @Basic
            @Column(name = "INPUTOBJECT")
            public String getInputObject() {
                if (JAXBContextUtils.isMarshallable(InputObjectContextPath, this.getInput())) {
                    return JAXBContextUtils.marshal(InputObjectContextPath, this.getInput());
                } else {
                    return null;
                }
            }

            public void setInputObject(String target) {
                if (target!= null) {
                    setInput(JAXBContextUtils.unmarshal(InputObjectContextPath, target));
                }
            }

            @Basic
            @Column(name = "OUTPUTOBJECT")
            public String getOutputObject() {
                if (JAXBContextUtils.isMarshallable(OutputObjectContextPath, this.getOutput())) {
                    return JAXBContextUtils.marshal(OutputObjectContextPath, this.getOutput());
                } else {
                    return null;
                }
            }

            public void setOutputObject(String target) {
                if (target!= null) {
                    setOutput(JAXBContextUtils.unmarshal(OutputObjectContextPath, target));
                }
            }

            @Basic
            @Column(name = "UPDATEOBJECT")
            public String getUpdateObject() {
                if (JAXBContextUtils.isMarshallable(UpdateObjectContextPath, this.getUpdate())) {
                    return JAXBContextUtils.marshal(UpdateObjectContextPath, this.getUpdate());
                } else {
                    return null;
                }
            }

            public void setUpdateObject(String target) {
                if (target!= null) {
                    setUpdate(JAXBContextUtils.unmarshal(UpdateObjectContextPath, target));
                }
            }

            @Basic
            @Column(name = "REJECTEDOBJECT")
            public String getRejectedObject() {
                if (JAXBContextUtils.isMarshallable(RejectedObjectContextPath, this.getRejected())) {
                    return JAXBContextUtils.marshal(RejectedObjectContextPath, this.getRejected());
                } else {
                    return null;
                }
            }

            public void setRejectedObject(String target) {
                if (target!= null) {
                    setRejected(JAXBContextUtils.unmarshal(RejectedObjectContextPath, target));
                }
            }

            @Basic
            @Column(name = "CONNECTIONOBJECT")
            public String getConnectionObject() {
                if (JAXBContextUtils.isMarshallable(ConnectionObjectContextPath, this.getConnection())) {
                    return JAXBContextUtils.marshal(ConnectionObjectContextPath, this.getConnection());
                } else {
                    return null;
                }
            }

            public void setConnectionObject(String target) {
                if (target!= null) {
                    setConnection(JAXBContextUtils.unmarshal(ConnectionObjectContextPath, target));
                }
            }

            @Basic
            @Column(name = "TABLEOBJECT")
            public String getTableObject() {
                if (JAXBContextUtils.isMarshallable(TableObjectContextPath, this.getTable())) {
                    return JAXBContextUtils.marshal(TableObjectContextPath, this.getTable());
                } else {
                    return null;
                }
            }

            public void setTableObject(String target) {
                if (target!= null) {
                    setTable(JAXBContextUtils.unmarshal(TableObjectContextPath, target));
                }
            }

            @Basic
            @Column(name = "STEPPERFORMANCETABLEOBJECT")
            public String getStepPerformanceTableObject() {
                if (JAXBContextUtils.isMarshallable(StepPerformanceTableObjectContextPath, this.getStepPerformanceTable())) {
                    return JAXBContextUtils.marshal(StepPerformanceTableObjectContextPath, this.getStepPerformanceTable());
                } else {
                    return null;
                }
            }

            public void setStepPerformanceTableObject(String target) {
                if (target!= null) {
                    setStepPerformanceTable(JAXBContextUtils.unmarshal(StepPerformanceTableObjectContextPath, target));
                }
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof Transformation.Info.Log)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final Transformation.Info.Log that = ((Transformation.Info.Log) object);
                {
                    Object lhsRead;
                    lhsRead = this.getRead();
                    Object rhsRead;
                    rhsRead = that.getRead();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "read", lhsRead), LocatorUtils.property(thatLocator, "read", rhsRead), lhsRead, rhsRead)) {
                        return false;
                    }
                }
                {
                    Object lhsWrite;
                    lhsWrite = this.getWrite();
                    Object rhsWrite;
                    rhsWrite = that.getWrite();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "write", lhsWrite), LocatorUtils.property(thatLocator, "write", rhsWrite), lhsWrite, rhsWrite)) {
                        return false;
                    }
                }
                {
                    Object lhsInput;
                    lhsInput = this.getInput();
                    Object rhsInput;
                    rhsInput = that.getInput();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "input", lhsInput), LocatorUtils.property(thatLocator, "input", rhsInput), lhsInput, rhsInput)) {
                        return false;
                    }
                }
                {
                    Object lhsOutput;
                    lhsOutput = this.getOutput();
                    Object rhsOutput;
                    rhsOutput = that.getOutput();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "output", lhsOutput), LocatorUtils.property(thatLocator, "output", rhsOutput), lhsOutput, rhsOutput)) {
                        return false;
                    }
                }
                {
                    Object lhsUpdate;
                    lhsUpdate = this.getUpdate();
                    Object rhsUpdate;
                    rhsUpdate = that.getUpdate();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "update", lhsUpdate), LocatorUtils.property(thatLocator, "update", rhsUpdate), lhsUpdate, rhsUpdate)) {
                        return false;
                    }
                }
                {
                    Object lhsRejected;
                    lhsRejected = this.getRejected();
                    Object rhsRejected;
                    rhsRejected = that.getRejected();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "rejected", lhsRejected), LocatorUtils.property(thatLocator, "rejected", rhsRejected), lhsRejected, rhsRejected)) {
                        return false;
                    }
                }
                {
                    Object lhsConnection;
                    lhsConnection = this.getConnection();
                    Object rhsConnection;
                    rhsConnection = that.getConnection();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "connection", lhsConnection), LocatorUtils.property(thatLocator, "connection", rhsConnection), lhsConnection, rhsConnection)) {
                        return false;
                    }
                }
                {
                    Object lhsTable;
                    lhsTable = this.getTable();
                    Object rhsTable;
                    rhsTable = that.getTable();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "table", lhsTable), LocatorUtils.property(thatLocator, "table", rhsTable), lhsTable, rhsTable)) {
                        return false;
                    }
                }
                {
                    Object lhsStepPerformanceTable;
                    lhsStepPerformanceTable = this.getStepPerformanceTable();
                    Object rhsStepPerformanceTable;
                    rhsStepPerformanceTable = that.getStepPerformanceTable();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "stepPerformanceTable", lhsStepPerformanceTable), LocatorUtils.property(thatLocator, "stepPerformanceTable", rhsStepPerformanceTable), lhsStepPerformanceTable, rhsStepPerformanceTable)) {
                        return false;
                    }
                }
                {
                    String lhsUseBatchid;
                    lhsUseBatchid = this.getUseBatchid();
                    String rhsUseBatchid;
                    rhsUseBatchid = that.getUseBatchid();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "useBatchid", lhsUseBatchid), LocatorUtils.property(thatLocator, "useBatchid", rhsUseBatchid), lhsUseBatchid, rhsUseBatchid)) {
                        return false;
                    }
                }
                {
                    String lhsUseLogfield;
                    lhsUseLogfield = this.getUseLogfield();
                    String rhsUseLogfield;
                    rhsUseLogfield = that.getUseLogfield();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "useLogfield", lhsUseLogfield), LocatorUtils.property(thatLocator, "useLogfield", rhsUseLogfield), lhsUseLogfield, rhsUseLogfield)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    Object theRead;
                    theRead = this.getRead();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "read", theRead), currentHashCode, theRead);
                }
                {
                    Object theWrite;
                    theWrite = this.getWrite();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "write", theWrite), currentHashCode, theWrite);
                }
                {
                    Object theInput;
                    theInput = this.getInput();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "input", theInput), currentHashCode, theInput);
                }
                {
                    Object theOutput;
                    theOutput = this.getOutput();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "output", theOutput), currentHashCode, theOutput);
                }
                {
                    Object theUpdate;
                    theUpdate = this.getUpdate();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "update", theUpdate), currentHashCode, theUpdate);
                }
                {
                    Object theRejected;
                    theRejected = this.getRejected();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rejected", theRejected), currentHashCode, theRejected);
                }
                {
                    Object theConnection;
                    theConnection = this.getConnection();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "connection", theConnection), currentHashCode, theConnection);
                }
                {
                    Object theTable;
                    theTable = this.getTable();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "table", theTable), currentHashCode, theTable);
                }
                {
                    Object theStepPerformanceTable;
                    theStepPerformanceTable = this.getStepPerformanceTable();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stepPerformanceTable", theStepPerformanceTable), currentHashCode, theStepPerformanceTable);
                }
                {
                    String theUseBatchid;
                    theUseBatchid = this.getUseBatchid();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "useBatchid", theUseBatchid), currentHashCode, theUseBatchid);
                }
                {
                    String theUseLogfield;
                    theUseLogfield = this.getUseLogfield();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "useLogfield", theUseLogfield), currentHashCode, theUseLogfield);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="connection" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="table" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="field" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *         &lt;element name="offset" type="{http://www.w3.org/2001/XMLSchema}decimal"/>
         *         &lt;element name="maxdiff" type="{http://www.w3.org/2001/XMLSchema}decimal"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "connection",
            "table",
            "field",
            "offset",
            "maxdiff"
        })
        @Entity(name = "Transformation$Info$Maxdate")
        @Table(name = "MAXDATE")
        @Inheritance(strategy = InheritanceType.JOINED)
        public static class Maxdate
            implements Equals, HashCode
        {

            @XmlElement(required = true)
            protected Object connection;
            @XmlElement(required = true)
            protected Object table;
            @XmlElement(required = true)
            protected Object field;
            @XmlElement(required = true)
            protected BigDecimal offset;
            @XmlElement(required = true)
            protected BigDecimal maxdiff;
            @XmlAttribute(name = "Hjid")
            protected Long hjid;
            public final static String ConnectionObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
            public final static String TableObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
            public final static String FieldObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";

            /**
             * Gets the value of the connection property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getConnection() {
                return connection;
            }

            /**
             * Sets the value of the connection property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setConnection(Object value) {
                this.connection = value;
            }

            /**
             * Gets the value of the table property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getTable() {
                return table;
            }

            /**
             * Sets the value of the table property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setTable(Object value) {
                this.table = value;
            }

            /**
             * Gets the value of the field property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getField() {
                return field;
            }

            /**
             * Sets the value of the field property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setField(Object value) {
                this.field = value;
            }

            /**
             * Gets the value of the offset property.
             * 
             * @return
             *     possible object is
             *     {@link BigDecimal }
             *     
             */
            @Basic
            @Column(name = "OFFSET_", precision = 20, scale = 10)
            public BigDecimal getOffset() {
                return offset;
            }

            /**
             * Sets the value of the offset property.
             * 
             * @param value
             *     allowed object is
             *     {@link BigDecimal }
             *     
             */
            public void setOffset(BigDecimal value) {
                this.offset = value;
            }

            /**
             * Gets the value of the maxdiff property.
             * 
             * @return
             *     possible object is
             *     {@link BigDecimal }
             *     
             */
            @Basic
            @Column(name = "MAXDIFF", precision = 20, scale = 10)
            public BigDecimal getMaxdiff() {
                return maxdiff;
            }

            /**
             * Sets the value of the maxdiff property.
             * 
             * @param value
             *     allowed object is
             *     {@link BigDecimal }
             *     
             */
            public void setMaxdiff(BigDecimal value) {
                this.maxdiff = value;
            }

            /**
             * Gets the value of the hjid property.
             * 
             * @return
             *     possible object is
             *     {@link Long }
             *     
             */
            @Id
            @Column(name = "HJID")
            @GeneratedValue(strategy = GenerationType.AUTO)
            public Long getHjid() {
                return hjid;
            }

            /**
             * Sets the value of the hjid property.
             * 
             * @param value
             *     allowed object is
             *     {@link Long }
             *     
             */
            public void setHjid(Long value) {
                this.hjid = value;
            }

            @Basic
            @Column(name = "CONNECTIONOBJECT")
            public String getConnectionObject() {
                if (JAXBContextUtils.isMarshallable(ConnectionObjectContextPath, this.getConnection())) {
                    return JAXBContextUtils.marshal(ConnectionObjectContextPath, this.getConnection());
                } else {
                    return null;
                }
            }

            public void setConnectionObject(String target) {
                if (target!= null) {
                    setConnection(JAXBContextUtils.unmarshal(ConnectionObjectContextPath, target));
                }
            }

            @Basic
            @Column(name = "TABLEOBJECT")
            public String getTableObject() {
                if (JAXBContextUtils.isMarshallable(TableObjectContextPath, this.getTable())) {
                    return JAXBContextUtils.marshal(TableObjectContextPath, this.getTable());
                } else {
                    return null;
                }
            }

            public void setTableObject(String target) {
                if (target!= null) {
                    setTable(JAXBContextUtils.unmarshal(TableObjectContextPath, target));
                }
            }

            @Basic
            @Column(name = "FIELDOBJECT")
            public String getFieldObject() {
                if (JAXBContextUtils.isMarshallable(FieldObjectContextPath, this.getField())) {
                    return JAXBContextUtils.marshal(FieldObjectContextPath, this.getField());
                } else {
                    return null;
                }
            }

            public void setFieldObject(String target) {
                if (target!= null) {
                    setField(JAXBContextUtils.unmarshal(FieldObjectContextPath, target));
                }
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof Transformation.Info.Maxdate)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final Transformation.Info.Maxdate that = ((Transformation.Info.Maxdate) object);
                {
                    Object lhsConnection;
                    lhsConnection = this.getConnection();
                    Object rhsConnection;
                    rhsConnection = that.getConnection();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "connection", lhsConnection), LocatorUtils.property(thatLocator, "connection", rhsConnection), lhsConnection, rhsConnection)) {
                        return false;
                    }
                }
                {
                    Object lhsTable;
                    lhsTable = this.getTable();
                    Object rhsTable;
                    rhsTable = that.getTable();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "table", lhsTable), LocatorUtils.property(thatLocator, "table", rhsTable), lhsTable, rhsTable)) {
                        return false;
                    }
                }
                {
                    Object lhsField;
                    lhsField = this.getField();
                    Object rhsField;
                    rhsField = that.getField();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "field", lhsField), LocatorUtils.property(thatLocator, "field", rhsField), lhsField, rhsField)) {
                        return false;
                    }
                }
                {
                    BigDecimal lhsOffset;
                    lhsOffset = this.getOffset();
                    BigDecimal rhsOffset;
                    rhsOffset = that.getOffset();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "offset", lhsOffset), LocatorUtils.property(thatLocator, "offset", rhsOffset), lhsOffset, rhsOffset)) {
                        return false;
                    }
                }
                {
                    BigDecimal lhsMaxdiff;
                    lhsMaxdiff = this.getMaxdiff();
                    BigDecimal rhsMaxdiff;
                    rhsMaxdiff = that.getMaxdiff();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "maxdiff", lhsMaxdiff), LocatorUtils.property(thatLocator, "maxdiff", rhsMaxdiff), lhsMaxdiff, rhsMaxdiff)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    Object theConnection;
                    theConnection = this.getConnection();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "connection", theConnection), currentHashCode, theConnection);
                }
                {
                    Object theTable;
                    theTable = this.getTable();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "table", theTable), currentHashCode, theTable);
                }
                {
                    Object theField;
                    theField = this.getField();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "field", theField), currentHashCode, theField);
                }
                {
                    BigDecimal theOffset;
                    theOffset = this.getOffset();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "offset", theOffset), currentHashCode, theOffset);
                }
                {
                    BigDecimal theMaxdiff;
                    theMaxdiff = this.getMaxdiff();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxdiff", theMaxdiff), currentHashCode, theMaxdiff);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="hop">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="from" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                   &lt;element name="to" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                   &lt;element name="enabled" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "hop"
    })
    @Entity(name = "Transformation$Order")
    @Table(name = "ORDER_")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class Order
        implements Equals, HashCode
    {

        @XmlElement(required = true)
        protected Transformation.Order.Hop hop;
        @XmlAttribute(name = "Hjid")
        protected Long hjid;

        /**
         * Gets the value of the hop property.
         * 
         * @return
         *     possible object is
         *     {@link Transformation.Order.Hop }
         *     
         */
        @ManyToOne(targetEntity = org.pentaho.kettle.schema.kettle.trans.Transformation.Order.Hop.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "HOP_ORDER__HJID")
        public Transformation.Order.Hop getHop() {
            return hop;
        }

        /**
         * Sets the value of the hop property.
         * 
         * @param value
         *     allowed object is
         *     {@link Transformation.Order.Hop }
         *     
         */
        public void setHop(Transformation.Order.Hop value) {
            this.hop = value;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof Transformation.Order)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Transformation.Order that = ((Transformation.Order) object);
            {
                Transformation.Order.Hop lhsHop;
                lhsHop = this.getHop();
                Transformation.Order.Hop rhsHop;
                rhsHop = that.getHop();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "hop", lhsHop), LocatorUtils.property(thatLocator, "hop", rhsHop), lhsHop, rhsHop)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                Transformation.Order.Hop theHop;
                theHop = this.getHop();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hop", theHop), currentHashCode, theHop);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="from" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *         &lt;element name="to" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *         &lt;element name="enabled" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "from",
            "to",
            "enabled"
        })
        @Entity(name = "Transformation$Order$Hop")
        @Table(name = "HOP")
        @Inheritance(strategy = InheritanceType.JOINED)
        public static class Hop
            implements Equals, HashCode
        {

            @XmlElement(required = true)
            protected String from;
            @XmlElement(required = true)
            protected String to;
            @XmlElement(required = true)
            protected String enabled;
            @XmlAttribute(name = "Hjid")
            protected Long hjid;

            /**
             * Gets the value of the from property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "FROM_", length = 255)
            public String getFrom() {
                return from;
            }

            /**
             * Sets the value of the from property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setFrom(String value) {
                this.from = value;
            }

            /**
             * Gets the value of the to property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "TO_", length = 255)
            public String getTo() {
                return to;
            }

            /**
             * Sets the value of the to property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setTo(String value) {
                this.to = value;
            }

            /**
             * Gets the value of the enabled property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "ENABLED", length = 255)
            public String getEnabled() {
                return enabled;
            }

            /**
             * Sets the value of the enabled property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setEnabled(String value) {
                this.enabled = value;
            }

            /**
             * Gets the value of the hjid property.
             * 
             * @return
             *     possible object is
             *     {@link Long }
             *     
             */
            @Id
            @Column(name = "HJID")
            @GeneratedValue(strategy = GenerationType.AUTO)
            public Long getHjid() {
                return hjid;
            }

            /**
             * Sets the value of the hjid property.
             * 
             * @param value
             *     allowed object is
             *     {@link Long }
             *     
             */
            public void setHjid(Long value) {
                this.hjid = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof Transformation.Order.Hop)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final Transformation.Order.Hop that = ((Transformation.Order.Hop) object);
                {
                    String lhsFrom;
                    lhsFrom = this.getFrom();
                    String rhsFrom;
                    rhsFrom = that.getFrom();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "from", lhsFrom), LocatorUtils.property(thatLocator, "from", rhsFrom), lhsFrom, rhsFrom)) {
                        return false;
                    }
                }
                {
                    String lhsTo;
                    lhsTo = this.getTo();
                    String rhsTo;
                    rhsTo = that.getTo();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "to", lhsTo), LocatorUtils.property(thatLocator, "to", rhsTo), lhsTo, rhsTo)) {
                        return false;
                    }
                }
                {
                    String lhsEnabled;
                    lhsEnabled = this.getEnabled();
                    String rhsEnabled;
                    rhsEnabled = that.getEnabled();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "enabled", lhsEnabled), LocatorUtils.property(thatLocator, "enabled", rhsEnabled), lhsEnabled, rhsEnabled)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theFrom;
                    theFrom = this.getFrom();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "from", theFrom), currentHashCode, theFrom);
                }
                {
                    String theTo;
                    theTo = this.getTo();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "to", theTo), currentHashCode, theTo);
                }
                {
                    String theEnabled;
                    theEnabled = this.getEnabled();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enabled", theEnabled), currentHashCode, theEnabled);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;extension base="{http://kettle.pentaho.org/schema/kettle/trans}tenantrecord">
     *       &lt;sequence>
     *         &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="distribute" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="copies" type="{http://www.w3.org/2001/XMLSchema}unsignedByte"/>
     *         &lt;element name="partitioning">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="method" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                   &lt;element name="schema_name" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="filename" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="filename_field" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
     *         &lt;element name="rownum_field" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
     *         &lt;element name="include_filename" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="separator" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="enclosure" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="header" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="buffer_size" type="{http://www.w3.org/2001/XMLSchema}unsignedShort" minOccurs="0"/>
     *         &lt;element name="lazy_conversion" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="add_filename_result" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="parallel" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="encoding" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="fields" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="select_unspecified" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *                   &lt;element name="meta" maxOccurs="unbounded" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;sequence>
     *                             &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                             &lt;element name="rename" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                             &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                             &lt;element name="length" type="{http://www.w3.org/2001/XMLSchema}byte"/>
     *                             &lt;element name="precision" type="{http://www.w3.org/2001/XMLSchema}byte"/>
     *                             &lt;element name="conversion_mask" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                             &lt;element name="date_format_lenient" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
     *                             &lt;element name="encoding" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                             &lt;element name="decimal_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                             &lt;element name="grouping_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                             &lt;element name="currency_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                             &lt;element name="storage_type" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *                           &lt;/sequence>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="field" maxOccurs="unbounded" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;sequence>
     *                             &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                             &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                             &lt;element name="format" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                             &lt;element name="currency" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                             &lt;element name="decimal" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                             &lt;element name="group" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                             &lt;element name="length" type="{http://www.w3.org/2001/XMLSchema}unsignedByte"/>
     *                             &lt;element name="precision" type="{http://www.w3.org/2001/XMLSchema}byte"/>
     *                             &lt;element name="trim_type" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                           &lt;/sequence>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="cluster_schema" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
     *         &lt;element name="remotesteps">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="input" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                   &lt;element name="output" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="GUI">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="xloc" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
     *                   &lt;element name="yloc" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
     *                   &lt;element name="draw" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/extension>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "type",
        "distribute",
        "copies",
        "partitioning",
        "filename",
        "filenameField",
        "rownumField",
        "includeFilename",
        "separator",
        "enclosure",
        "header",
        "bufferSize",
        "lazyConversion",
        "addFilenameResult",
        "parallel",
        "encoding",
        "fields",
        "clusterSchema",
        "remotesteps",
        "gui"
    })
    @Entity(name = "Transformation$Step")
    @Table(name = "STEP")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class Step
        extends Tenantrecord
        implements Equals, HashCode
    {

        @XmlElement(required = true)
        protected String type;
        @XmlElement(required = true)
        protected String distribute;
        @XmlSchemaType(name = "unsignedByte")
        protected short copies;
        @XmlElement(required = true)
        protected Transformation.Step.Partitioning partitioning;
        protected String filename;
        @XmlElement(name = "filename_field")
        protected Object filenameField;
        @XmlElement(name = "rownum_field")
        protected Object rownumField;
        @XmlElement(name = "include_filename")
        protected String includeFilename;
        protected String separator;
        protected String enclosure;
        protected String header;
        @XmlElement(name = "buffer_size")
        @XmlSchemaType(name = "unsignedShort")
        protected Integer bufferSize;
        @XmlElement(name = "lazy_conversion")
        protected String lazyConversion;
        @XmlElement(name = "add_filename_result")
        protected String addFilenameResult;
        protected String parallel;
        protected String encoding;
        protected Transformation.Step.Fields fields;
        @XmlElement(name = "cluster_schema", required = true)
        protected Object clusterSchema;
        @XmlElement(required = true)
        protected Transformation.Step.Remotesteps remotesteps;
        @XmlElement(name = "GUI", required = true)
        protected Transformation.Step.GUI gui;
        @XmlAttribute(name = "Hjid")
        protected Long hjid;
        public final static String FilenameFieldObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
        public final static String RownumFieldObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
        public final static String ClusterSchemaObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";

        /**
         * Gets the value of the type property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "TYPE_", length = 255)
        public String getType() {
            return type;
        }

        /**
         * Sets the value of the type property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setType(String value) {
            this.type = value;
        }

        /**
         * Gets the value of the distribute property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "DISTRIBUTE", length = 255)
        public String getDistribute() {
            return distribute;
        }

        /**
         * Sets the value of the distribute property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDistribute(String value) {
            this.distribute = value;
        }

        /**
         * Gets the value of the copies property.
         * 
         */
        @Basic
        @Column(name = "COPIES", precision = 3, scale = 0)
        public short getCopies() {
            return copies;
        }

        /**
         * Sets the value of the copies property.
         * 
         */
        public void setCopies(short value) {
            this.copies = value;
        }

        /**
         * Gets the value of the partitioning property.
         * 
         * @return
         *     possible object is
         *     {@link Transformation.Step.Partitioning }
         *     
         */
        @ManyToOne(targetEntity = org.pentaho.kettle.schema.kettle.trans.Transformation.Step.Partitioning.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "PARTITIONING_STEP_HJID")
        public Transformation.Step.Partitioning getPartitioning() {
            return partitioning;
        }

        /**
         * Sets the value of the partitioning property.
         * 
         * @param value
         *     allowed object is
         *     {@link Transformation.Step.Partitioning }
         *     
         */
        public void setPartitioning(Transformation.Step.Partitioning value) {
            this.partitioning = value;
        }

        /**
         * Gets the value of the filename property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "FILENAME", length = 255)
        public String getFilename() {
            return filename;
        }

        /**
         * Sets the value of the filename property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setFilename(String value) {
            this.filename = value;
        }

        /**
         * Gets the value of the filenameField property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        @Transient
        public Object getFilenameField() {
            return filenameField;
        }

        /**
         * Sets the value of the filenameField property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setFilenameField(Object value) {
            this.filenameField = value;
        }

        /**
         * Gets the value of the rownumField property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        @Transient
        public Object getRownumField() {
            return rownumField;
        }

        /**
         * Sets the value of the rownumField property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setRownumField(Object value) {
            this.rownumField = value;
        }

        /**
         * Gets the value of the includeFilename property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "INCLUDEFILENAME", length = 255)
        public String getIncludeFilename() {
            return includeFilename;
        }

        /**
         * Sets the value of the includeFilename property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setIncludeFilename(String value) {
            this.includeFilename = value;
        }

        /**
         * Gets the value of the separator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "SEPARATOR", length = 255)
        public String getSeparator() {
            return separator;
        }

        /**
         * Sets the value of the separator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setSeparator(String value) {
            this.separator = value;
        }

        /**
         * Gets the value of the enclosure property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "ENCLOSURE", length = 255)
        public String getEnclosure() {
            return enclosure;
        }

        /**
         * Sets the value of the enclosure property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setEnclosure(String value) {
            this.enclosure = value;
        }

        /**
         * Gets the value of the header property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "HEADER", length = 255)
        public String getHeader() {
            return header;
        }

        /**
         * Sets the value of the header property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setHeader(String value) {
            this.header = value;
        }

        /**
         * Gets the value of the bufferSize property.
         * 
         * @return
         *     possible object is
         *     {@link Integer }
         *     
         */
        @Basic
        @Column(name = "BUFFERSIZE", precision = 5, scale = 0)
        public Integer getBufferSize() {
            return bufferSize;
        }

        /**
         * Sets the value of the bufferSize property.
         * 
         * @param value
         *     allowed object is
         *     {@link Integer }
         *     
         */
        public void setBufferSize(Integer value) {
            this.bufferSize = value;
        }

        /**
         * Gets the value of the lazyConversion property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "LAZYCONVERSION", length = 255)
        public String getLazyConversion() {
            return lazyConversion;
        }

        /**
         * Sets the value of the lazyConversion property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setLazyConversion(String value) {
            this.lazyConversion = value;
        }

        /**
         * Gets the value of the addFilenameResult property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "ADDFILENAMERESULT", length = 255)
        public String getAddFilenameResult() {
            return addFilenameResult;
        }

        /**
         * Sets the value of the addFilenameResult property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setAddFilenameResult(String value) {
            this.addFilenameResult = value;
        }

        /**
         * Gets the value of the parallel property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "PARALLEL", length = 255)
        public String getParallel() {
            return parallel;
        }

        /**
         * Sets the value of the parallel property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setParallel(String value) {
            this.parallel = value;
        }

        /**
         * Gets the value of the encoding property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "ENCODING_", length = 255)
        public String getEncoding() {
            return encoding;
        }

        /**
         * Sets the value of the encoding property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setEncoding(String value) {
            this.encoding = value;
        }

        /**
         * Gets the value of the fields property.
         * 
         * @return
         *     possible object is
         *     {@link Transformation.Step.Fields }
         *     
         */
        @ManyToOne(targetEntity = org.pentaho.kettle.schema.kettle.trans.Transformation.Step.Fields.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "FIELDS_STEP_HJID")
        public Transformation.Step.Fields getFields() {
            return fields;
        }

        /**
         * Sets the value of the fields property.
         * 
         * @param value
         *     allowed object is
         *     {@link Transformation.Step.Fields }
         *     
         */
        public void setFields(Transformation.Step.Fields value) {
            this.fields = value;
        }

        /**
         * Gets the value of the clusterSchema property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        @Transient
        public Object getClusterSchema() {
            return clusterSchema;
        }

        /**
         * Sets the value of the clusterSchema property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setClusterSchema(Object value) {
            this.clusterSchema = value;
        }

        /**
         * Gets the value of the remotesteps property.
         * 
         * @return
         *     possible object is
         *     {@link Transformation.Step.Remotesteps }
         *     
         */
        @ManyToOne(targetEntity = org.pentaho.kettle.schema.kettle.trans.Transformation.Step.Remotesteps.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "REMOTESTEPS_STEP_HJID")
        public Transformation.Step.Remotesteps getRemotesteps() {
            return remotesteps;
        }

        /**
         * Sets the value of the remotesteps property.
         * 
         * @param value
         *     allowed object is
         *     {@link Transformation.Step.Remotesteps }
         *     
         */
        public void setRemotesteps(Transformation.Step.Remotesteps value) {
            this.remotesteps = value;
        }

        /**
         * Gets the value of the gui property.
         * 
         * @return
         *     possible object is
         *     {@link Transformation.Step.GUI }
         *     
         */
        @ManyToOne(targetEntity = org.pentaho.kettle.schema.kettle.trans.Transformation.Step.GUI.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "GUI_STEP_HJID")
        public Transformation.Step.GUI getGUI() {
            return gui;
        }

        /**
         * Sets the value of the gui property.
         * 
         * @param value
         *     allowed object is
         *     {@link Transformation.Step.GUI }
         *     
         */
        public void setGUI(Transformation.Step.GUI value) {
            this.gui = value;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

        @Basic
        @Column(name = "FILENAMEFIELDOBJECT")
        public String getFilenameFieldObject() {
            if (JAXBContextUtils.isMarshallable(FilenameFieldObjectContextPath, this.getFilenameField())) {
                return JAXBContextUtils.marshal(FilenameFieldObjectContextPath, this.getFilenameField());
            } else {
                return null;
            }
        }

        public void setFilenameFieldObject(String target) {
            if (target!= null) {
                setFilenameField(JAXBContextUtils.unmarshal(FilenameFieldObjectContextPath, target));
            }
        }

        @Basic
        @Column(name = "ROWNUMFIELDOBJECT")
        public String getRownumFieldObject() {
            if (JAXBContextUtils.isMarshallable(RownumFieldObjectContextPath, this.getRownumField())) {
                return JAXBContextUtils.marshal(RownumFieldObjectContextPath, this.getRownumField());
            } else {
                return null;
            }
        }

        public void setRownumFieldObject(String target) {
            if (target!= null) {
                setRownumField(JAXBContextUtils.unmarshal(RownumFieldObjectContextPath, target));
            }
        }

        @Basic
        @Column(name = "CLUSTERSCHEMAOBJECT")
        public String getClusterSchemaObject() {
            if (JAXBContextUtils.isMarshallable(ClusterSchemaObjectContextPath, this.getClusterSchema())) {
                return JAXBContextUtils.marshal(ClusterSchemaObjectContextPath, this.getClusterSchema());
            } else {
                return null;
            }
        }

        public void setClusterSchemaObject(String target) {
            if (target!= null) {
                setClusterSchema(JAXBContextUtils.unmarshal(ClusterSchemaObjectContextPath, target));
            }
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof Transformation.Step)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                return false;
            }
            final Transformation.Step that = ((Transformation.Step) object);
            {
                String lhsType;
                lhsType = this.getType();
                String rhsType;
                rhsType = that.getType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                    return false;
                }
            }
            {
                String lhsDistribute;
                lhsDistribute = this.getDistribute();
                String rhsDistribute;
                rhsDistribute = that.getDistribute();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "distribute", lhsDistribute), LocatorUtils.property(thatLocator, "distribute", rhsDistribute), lhsDistribute, rhsDistribute)) {
                    return false;
                }
            }
            {
                short lhsCopies;
                lhsCopies = this.getCopies();
                short rhsCopies;
                rhsCopies = that.getCopies();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "copies", lhsCopies), LocatorUtils.property(thatLocator, "copies", rhsCopies), lhsCopies, rhsCopies)) {
                    return false;
                }
            }
            {
                Transformation.Step.Partitioning lhsPartitioning;
                lhsPartitioning = this.getPartitioning();
                Transformation.Step.Partitioning rhsPartitioning;
                rhsPartitioning = that.getPartitioning();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "partitioning", lhsPartitioning), LocatorUtils.property(thatLocator, "partitioning", rhsPartitioning), lhsPartitioning, rhsPartitioning)) {
                    return false;
                }
            }
            {
                String lhsFilename;
                lhsFilename = this.getFilename();
                String rhsFilename;
                rhsFilename = that.getFilename();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "filename", lhsFilename), LocatorUtils.property(thatLocator, "filename", rhsFilename), lhsFilename, rhsFilename)) {
                    return false;
                }
            }
            {
                Object lhsFilenameField;
                lhsFilenameField = this.getFilenameField();
                Object rhsFilenameField;
                rhsFilenameField = that.getFilenameField();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "filenameField", lhsFilenameField), LocatorUtils.property(thatLocator, "filenameField", rhsFilenameField), lhsFilenameField, rhsFilenameField)) {
                    return false;
                }
            }
            {
                Object lhsRownumField;
                lhsRownumField = this.getRownumField();
                Object rhsRownumField;
                rhsRownumField = that.getRownumField();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "rownumField", lhsRownumField), LocatorUtils.property(thatLocator, "rownumField", rhsRownumField), lhsRownumField, rhsRownumField)) {
                    return false;
                }
            }
            {
                String lhsIncludeFilename;
                lhsIncludeFilename = this.getIncludeFilename();
                String rhsIncludeFilename;
                rhsIncludeFilename = that.getIncludeFilename();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "includeFilename", lhsIncludeFilename), LocatorUtils.property(thatLocator, "includeFilename", rhsIncludeFilename), lhsIncludeFilename, rhsIncludeFilename)) {
                    return false;
                }
            }
            {
                String lhsSeparator;
                lhsSeparator = this.getSeparator();
                String rhsSeparator;
                rhsSeparator = that.getSeparator();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "separator", lhsSeparator), LocatorUtils.property(thatLocator, "separator", rhsSeparator), lhsSeparator, rhsSeparator)) {
                    return false;
                }
            }
            {
                String lhsEnclosure;
                lhsEnclosure = this.getEnclosure();
                String rhsEnclosure;
                rhsEnclosure = that.getEnclosure();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "enclosure", lhsEnclosure), LocatorUtils.property(thatLocator, "enclosure", rhsEnclosure), lhsEnclosure, rhsEnclosure)) {
                    return false;
                }
            }
            {
                String lhsHeader;
                lhsHeader = this.getHeader();
                String rhsHeader;
                rhsHeader = that.getHeader();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "header", lhsHeader), LocatorUtils.property(thatLocator, "header", rhsHeader), lhsHeader, rhsHeader)) {
                    return false;
                }
            }
            {
                Integer lhsBufferSize;
                lhsBufferSize = this.getBufferSize();
                Integer rhsBufferSize;
                rhsBufferSize = that.getBufferSize();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "bufferSize", lhsBufferSize), LocatorUtils.property(thatLocator, "bufferSize", rhsBufferSize), lhsBufferSize, rhsBufferSize)) {
                    return false;
                }
            }
            {
                String lhsLazyConversion;
                lhsLazyConversion = this.getLazyConversion();
                String rhsLazyConversion;
                rhsLazyConversion = that.getLazyConversion();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "lazyConversion", lhsLazyConversion), LocatorUtils.property(thatLocator, "lazyConversion", rhsLazyConversion), lhsLazyConversion, rhsLazyConversion)) {
                    return false;
                }
            }
            {
                String lhsAddFilenameResult;
                lhsAddFilenameResult = this.getAddFilenameResult();
                String rhsAddFilenameResult;
                rhsAddFilenameResult = that.getAddFilenameResult();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "addFilenameResult", lhsAddFilenameResult), LocatorUtils.property(thatLocator, "addFilenameResult", rhsAddFilenameResult), lhsAddFilenameResult, rhsAddFilenameResult)) {
                    return false;
                }
            }
            {
                String lhsParallel;
                lhsParallel = this.getParallel();
                String rhsParallel;
                rhsParallel = that.getParallel();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "parallel", lhsParallel), LocatorUtils.property(thatLocator, "parallel", rhsParallel), lhsParallel, rhsParallel)) {
                    return false;
                }
            }
            {
                String lhsEncoding;
                lhsEncoding = this.getEncoding();
                String rhsEncoding;
                rhsEncoding = that.getEncoding();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "encoding", lhsEncoding), LocatorUtils.property(thatLocator, "encoding", rhsEncoding), lhsEncoding, rhsEncoding)) {
                    return false;
                }
            }
            {
                Transformation.Step.Fields lhsFields;
                lhsFields = this.getFields();
                Transformation.Step.Fields rhsFields;
                rhsFields = that.getFields();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "fields", lhsFields), LocatorUtils.property(thatLocator, "fields", rhsFields), lhsFields, rhsFields)) {
                    return false;
                }
            }
            {
                Object lhsClusterSchema;
                lhsClusterSchema = this.getClusterSchema();
                Object rhsClusterSchema;
                rhsClusterSchema = that.getClusterSchema();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "clusterSchema", lhsClusterSchema), LocatorUtils.property(thatLocator, "clusterSchema", rhsClusterSchema), lhsClusterSchema, rhsClusterSchema)) {
                    return false;
                }
            }
            {
                Transformation.Step.Remotesteps lhsRemotesteps;
                lhsRemotesteps = this.getRemotesteps();
                Transformation.Step.Remotesteps rhsRemotesteps;
                rhsRemotesteps = that.getRemotesteps();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "remotesteps", lhsRemotesteps), LocatorUtils.property(thatLocator, "remotesteps", rhsRemotesteps), lhsRemotesteps, rhsRemotesteps)) {
                    return false;
                }
            }
            {
                Transformation.Step.GUI lhsGUI;
                lhsGUI = this.getGUI();
                Transformation.Step.GUI rhsGUI;
                rhsGUI = that.getGUI();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "gui", lhsGUI), LocatorUtils.property(thatLocator, "gui", rhsGUI), lhsGUI, rhsGUI)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = super.hashCode(locator, strategy);
            {
                String theType;
                theType = this.getType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
            }
            {
                String theDistribute;
                theDistribute = this.getDistribute();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "distribute", theDistribute), currentHashCode, theDistribute);
            }
            {
                short theCopies;
                theCopies = this.getCopies();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "copies", theCopies), currentHashCode, theCopies);
            }
            {
                Transformation.Step.Partitioning thePartitioning;
                thePartitioning = this.getPartitioning();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partitioning", thePartitioning), currentHashCode, thePartitioning);
            }
            {
                String theFilename;
                theFilename = this.getFilename();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "filename", theFilename), currentHashCode, theFilename);
            }
            {
                Object theFilenameField;
                theFilenameField = this.getFilenameField();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "filenameField", theFilenameField), currentHashCode, theFilenameField);
            }
            {
                Object theRownumField;
                theRownumField = this.getRownumField();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rownumField", theRownumField), currentHashCode, theRownumField);
            }
            {
                String theIncludeFilename;
                theIncludeFilename = this.getIncludeFilename();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "includeFilename", theIncludeFilename), currentHashCode, theIncludeFilename);
            }
            {
                String theSeparator;
                theSeparator = this.getSeparator();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "separator", theSeparator), currentHashCode, theSeparator);
            }
            {
                String theEnclosure;
                theEnclosure = this.getEnclosure();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enclosure", theEnclosure), currentHashCode, theEnclosure);
            }
            {
                String theHeader;
                theHeader = this.getHeader();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "header", theHeader), currentHashCode, theHeader);
            }
            {
                Integer theBufferSize;
                theBufferSize = this.getBufferSize();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bufferSize", theBufferSize), currentHashCode, theBufferSize);
            }
            {
                String theLazyConversion;
                theLazyConversion = this.getLazyConversion();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lazyConversion", theLazyConversion), currentHashCode, theLazyConversion);
            }
            {
                String theAddFilenameResult;
                theAddFilenameResult = this.getAddFilenameResult();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addFilenameResult", theAddFilenameResult), currentHashCode, theAddFilenameResult);
            }
            {
                String theParallel;
                theParallel = this.getParallel();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parallel", theParallel), currentHashCode, theParallel);
            }
            {
                String theEncoding;
                theEncoding = this.getEncoding();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "encoding", theEncoding), currentHashCode, theEncoding);
            }
            {
                Transformation.Step.Fields theFields;
                theFields = this.getFields();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fields", theFields), currentHashCode, theFields);
            }
            {
                Object theClusterSchema;
                theClusterSchema = this.getClusterSchema();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "clusterSchema", theClusterSchema), currentHashCode, theClusterSchema);
            }
            {
                Transformation.Step.Remotesteps theRemotesteps;
                theRemotesteps = this.getRemotesteps();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "remotesteps", theRemotesteps), currentHashCode, theRemotesteps);
            }
            {
                Transformation.Step.GUI theGUI;
                theGUI = this.getGUI();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gui", theGUI), currentHashCode, theGUI);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="select_unspecified" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
         *         &lt;element name="meta" maxOccurs="unbounded" minOccurs="0">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;sequence>
         *                   &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *                   &lt;element name="rename" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *                   &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *                   &lt;element name="length" type="{http://www.w3.org/2001/XMLSchema}byte"/>
         *                   &lt;element name="precision" type="{http://www.w3.org/2001/XMLSchema}byte"/>
         *                   &lt;element name="conversion_mask" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *                   &lt;element name="date_format_lenient" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
         *                   &lt;element name="encoding" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *                   &lt;element name="decimal_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *                   &lt;element name="grouping_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *                   &lt;element name="currency_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *                   &lt;element name="storage_type" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *                 &lt;/sequence>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="field" maxOccurs="unbounded" minOccurs="0">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;sequence>
         *                   &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *                   &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *                   &lt;element name="format" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *                   &lt;element name="currency" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *                   &lt;element name="decimal" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *                   &lt;element name="group" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *                   &lt;element name="length" type="{http://www.w3.org/2001/XMLSchema}unsignedByte"/>
         *                   &lt;element name="precision" type="{http://www.w3.org/2001/XMLSchema}byte"/>
         *                   &lt;element name="trim_type" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *                 &lt;/sequence>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "selectUnspecified",
            "meta",
            "field"
        })
        @Entity(name = "Transformation$Step$Fields")
        @Table(name = "FIELDS")
        @Inheritance(strategy = InheritanceType.JOINED)
        public static class Fields
            implements Equals, HashCode
        {

            @XmlElement(name = "select_unspecified")
            protected String selectUnspecified;
            protected List<Transformation.Step.Fields.Meta> meta;
            protected List<Transformation.Step.Fields.Field> field;
            @XmlAttribute(name = "Hjid")
            protected Long hjid;

            /**
             * Gets the value of the selectUnspecified property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "SELECTUNSPECIFIED", length = 255)
            public String getSelectUnspecified() {
                return selectUnspecified;
            }

            /**
             * Sets the value of the selectUnspecified property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setSelectUnspecified(String value) {
                this.selectUnspecified = value;
            }

            /**
             * Gets the value of the meta property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the meta property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getMeta().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link Transformation.Step.Fields.Meta }
             * 
             * 
             */
            @OneToMany(targetEntity = org.pentaho.kettle.schema.kettle.trans.Transformation.Step.Fields.Meta.class, cascade = {
                CascadeType.ALL
            })
            @JoinColumn(name = "META_FIELDS_HJID")
            public List<Transformation.Step.Fields.Meta> getMeta() {
                if (meta == null) {
                    meta = new ArrayList<Transformation.Step.Fields.Meta>();
                }
                return this.meta;
            }

            /**
             * 
             * 
             */
            public void setMeta(List<Transformation.Step.Fields.Meta> meta) {
                this.meta = meta;
            }

            /**
             * Gets the value of the field property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the field property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getField().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link Transformation.Step.Fields.Field }
             * 
             * 
             */
            @OneToMany(targetEntity = org.pentaho.kettle.schema.kettle.trans.Transformation.Step.Fields.Field.class, cascade = {
                CascadeType.ALL
            })
            @JoinColumn(name = "FIELD_FIELDS_HJID")
            public List<Transformation.Step.Fields.Field> getField() {
                if (field == null) {
                    field = new ArrayList<Transformation.Step.Fields.Field>();
                }
                return this.field;
            }

            /**
             * 
             * 
             */
            public void setField(List<Transformation.Step.Fields.Field> field) {
                this.field = field;
            }

            /**
             * Gets the value of the hjid property.
             * 
             * @return
             *     possible object is
             *     {@link Long }
             *     
             */
            @Id
            @Column(name = "HJID")
            @GeneratedValue(strategy = GenerationType.AUTO)
            public Long getHjid() {
                return hjid;
            }

            /**
             * Sets the value of the hjid property.
             * 
             * @param value
             *     allowed object is
             *     {@link Long }
             *     
             */
            public void setHjid(Long value) {
                this.hjid = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof Transformation.Step.Fields)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final Transformation.Step.Fields that = ((Transformation.Step.Fields) object);
                {
                    String lhsSelectUnspecified;
                    lhsSelectUnspecified = this.getSelectUnspecified();
                    String rhsSelectUnspecified;
                    rhsSelectUnspecified = that.getSelectUnspecified();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "selectUnspecified", lhsSelectUnspecified), LocatorUtils.property(thatLocator, "selectUnspecified", rhsSelectUnspecified), lhsSelectUnspecified, rhsSelectUnspecified)) {
                        return false;
                    }
                }
                {
                    List<Transformation.Step.Fields.Meta> lhsMeta;
                    lhsMeta = this.getMeta();
                    List<Transformation.Step.Fields.Meta> rhsMeta;
                    rhsMeta = that.getMeta();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "meta", lhsMeta), LocatorUtils.property(thatLocator, "meta", rhsMeta), lhsMeta, rhsMeta)) {
                        return false;
                    }
                }
                {
                    List<Transformation.Step.Fields.Field> lhsField;
                    lhsField = this.getField();
                    List<Transformation.Step.Fields.Field> rhsField;
                    rhsField = that.getField();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "field", lhsField), LocatorUtils.property(thatLocator, "field", rhsField), lhsField, rhsField)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theSelectUnspecified;
                    theSelectUnspecified = this.getSelectUnspecified();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "selectUnspecified", theSelectUnspecified), currentHashCode, theSelectUnspecified);
                }
                {
                    List<Transformation.Step.Fields.Meta> theMeta;
                    theMeta = this.getMeta();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "meta", theMeta), currentHashCode, theMeta);
                }
                {
                    List<Transformation.Step.Fields.Field> theField;
                    theField = this.getField();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "field", theField), currentHashCode, theField);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
             *         &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string"/>
             *         &lt;element name="format" type="{http://www.w3.org/2001/XMLSchema}string"/>
             *         &lt;element name="currency" type="{http://www.w3.org/2001/XMLSchema}string"/>
             *         &lt;element name="decimal" type="{http://www.w3.org/2001/XMLSchema}string"/>
             *         &lt;element name="group" type="{http://www.w3.org/2001/XMLSchema}string"/>
             *         &lt;element name="length" type="{http://www.w3.org/2001/XMLSchema}unsignedByte"/>
             *         &lt;element name="precision" type="{http://www.w3.org/2001/XMLSchema}byte"/>
             *         &lt;element name="trim_type" type="{http://www.w3.org/2001/XMLSchema}string"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "name",
                "type",
                "format",
                "currency",
                "decimal",
                "group",
                "length",
                "precision",
                "trimType"
            })
            @Entity(name = "Transformation$Step$Fields$Field")
            @Table(name = "FIELD")
            @Inheritance(strategy = InheritanceType.JOINED)
            public static class Field
                implements Equals, HashCode
            {

                @XmlElement(required = true)
                protected String name;
                @XmlElement(required = true)
                protected String type;
                @XmlElement(required = true)
                protected String format;
                @XmlElement(required = true)
                protected String currency;
                @XmlElement(required = true)
                protected String decimal;
                @XmlElement(required = true)
                protected String group;
                @XmlSchemaType(name = "unsignedByte")
                protected short length;
                protected byte precision;
                @XmlElement(name = "trim_type", required = true)
                protected String trimType;
                @XmlAttribute(name = "Hjid")
                protected Long hjid;

                /**
                 * Gets the value of the name property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                @Basic
                @Column(name = "NAME_", length = 255)
                public String getName() {
                    return name;
                }

                /**
                 * Sets the value of the name property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setName(String value) {
                    this.name = value;
                }

                /**
                 * Gets the value of the type property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                @Basic
                @Column(name = "TYPE_", length = 255)
                public String getType() {
                    return type;
                }

                /**
                 * Sets the value of the type property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setType(String value) {
                    this.type = value;
                }

                /**
                 * Gets the value of the format property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                @Basic
                @Column(name = "FORMAT", length = 255)
                public String getFormat() {
                    return format;
                }

                /**
                 * Sets the value of the format property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setFormat(String value) {
                    this.format = value;
                }

                /**
                 * Gets the value of the currency property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                @Basic
                @Column(name = "CURRENCY", length = 255)
                public String getCurrency() {
                    return currency;
                }

                /**
                 * Sets the value of the currency property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setCurrency(String value) {
                    this.currency = value;
                }

                /**
                 * Gets the value of the decimal property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                @Basic
                @Column(name = "DECIMAL_", length = 255)
                public String getDecimal() {
                    return decimal;
                }

                /**
                 * Sets the value of the decimal property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setDecimal(String value) {
                    this.decimal = value;
                }

                /**
                 * Gets the value of the group property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                @Basic
                @Column(name = "GROUP_", length = 255)
                public String getGroup() {
                    return group;
                }

                /**
                 * Sets the value of the group property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setGroup(String value) {
                    this.group = value;
                }

                /**
                 * Gets the value of the length property.
                 * 
                 */
                @Basic
                @Column(name = "LENGTH_", precision = 3, scale = 0)
                public short getLength() {
                    return length;
                }

                /**
                 * Sets the value of the length property.
                 * 
                 */
                public void setLength(short value) {
                    this.length = value;
                }

                /**
                 * Gets the value of the precision property.
                 * 
                 */
                @Basic
                @Column(name = "PRECISION_", precision = 3, scale = 0)
                public byte getPrecision() {
                    return precision;
                }

                /**
                 * Sets the value of the precision property.
                 * 
                 */
                public void setPrecision(byte value) {
                    this.precision = value;
                }

                /**
                 * Gets the value of the trimType property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                @Basic
                @Column(name = "TRIMTYPE", length = 255)
                public String getTrimType() {
                    return trimType;
                }

                /**
                 * Sets the value of the trimType property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setTrimType(String value) {
                    this.trimType = value;
                }

                /**
                 * Gets the value of the hjid property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Long }
                 *     
                 */
                @Id
                @Column(name = "HJID")
                @GeneratedValue(strategy = GenerationType.AUTO)
                public Long getHjid() {
                    return hjid;
                }

                /**
                 * Sets the value of the hjid property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Long }
                 *     
                 */
                public void setHjid(Long value) {
                    this.hjid = value;
                }

                public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                    if (!(object instanceof Transformation.Step.Fields.Field)) {
                        return false;
                    }
                    if (this == object) {
                        return true;
                    }
                    final Transformation.Step.Fields.Field that = ((Transformation.Step.Fields.Field) object);
                    {
                        String lhsName;
                        lhsName = this.getName();
                        String rhsName;
                        rhsName = that.getName();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                            return false;
                        }
                    }
                    {
                        String lhsType;
                        lhsType = this.getType();
                        String rhsType;
                        rhsType = that.getType();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                            return false;
                        }
                    }
                    {
                        String lhsFormat;
                        lhsFormat = this.getFormat();
                        String rhsFormat;
                        rhsFormat = that.getFormat();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "format", lhsFormat), LocatorUtils.property(thatLocator, "format", rhsFormat), lhsFormat, rhsFormat)) {
                            return false;
                        }
                    }
                    {
                        String lhsCurrency;
                        lhsCurrency = this.getCurrency();
                        String rhsCurrency;
                        rhsCurrency = that.getCurrency();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "currency", lhsCurrency), LocatorUtils.property(thatLocator, "currency", rhsCurrency), lhsCurrency, rhsCurrency)) {
                            return false;
                        }
                    }
                    {
                        String lhsDecimal;
                        lhsDecimal = this.getDecimal();
                        String rhsDecimal;
                        rhsDecimal = that.getDecimal();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "decimal", lhsDecimal), LocatorUtils.property(thatLocator, "decimal", rhsDecimal), lhsDecimal, rhsDecimal)) {
                            return false;
                        }
                    }
                    {
                        String lhsGroup;
                        lhsGroup = this.getGroup();
                        String rhsGroup;
                        rhsGroup = that.getGroup();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "group", lhsGroup), LocatorUtils.property(thatLocator, "group", rhsGroup), lhsGroup, rhsGroup)) {
                            return false;
                        }
                    }
                    {
                        short lhsLength;
                        lhsLength = this.getLength();
                        short rhsLength;
                        rhsLength = that.getLength();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "length", lhsLength), LocatorUtils.property(thatLocator, "length", rhsLength), lhsLength, rhsLength)) {
                            return false;
                        }
                    }
                    {
                        byte lhsPrecision;
                        lhsPrecision = this.getPrecision();
                        byte rhsPrecision;
                        rhsPrecision = that.getPrecision();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "precision", lhsPrecision), LocatorUtils.property(thatLocator, "precision", rhsPrecision), lhsPrecision, rhsPrecision)) {
                            return false;
                        }
                    }
                    {
                        String lhsTrimType;
                        lhsTrimType = this.getTrimType();
                        String rhsTrimType;
                        rhsTrimType = that.getTrimType();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "trimType", lhsTrimType), LocatorUtils.property(thatLocator, "trimType", rhsTrimType), lhsTrimType, rhsTrimType)) {
                            return false;
                        }
                    }
                    return true;
                }

                public boolean equals(Object object) {
                    final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                    return equals(null, null, object, strategy);
                }

                public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                    int currentHashCode = 1;
                    {
                        String theName;
                        theName = this.getName();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
                    }
                    {
                        String theType;
                        theType = this.getType();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                    }
                    {
                        String theFormat;
                        theFormat = this.getFormat();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "format", theFormat), currentHashCode, theFormat);
                    }
                    {
                        String theCurrency;
                        theCurrency = this.getCurrency();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currency", theCurrency), currentHashCode, theCurrency);
                    }
                    {
                        String theDecimal;
                        theDecimal = this.getDecimal();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "decimal", theDecimal), currentHashCode, theDecimal);
                    }
                    {
                        String theGroup;
                        theGroup = this.getGroup();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "group", theGroup), currentHashCode, theGroup);
                    }
                    {
                        short theLength;
                        theLength = this.getLength();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "length", theLength), currentHashCode, theLength);
                    }
                    {
                        byte thePrecision;
                        thePrecision = this.getPrecision();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "precision", thePrecision), currentHashCode, thePrecision);
                    }
                    {
                        String theTrimType;
                        theTrimType = this.getTrimType();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trimType", theTrimType), currentHashCode, theTrimType);
                    }
                    return currentHashCode;
                }

                public int hashCode() {
                    final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                    return this.hashCode(null, strategy);
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
             *         &lt;element name="rename" type="{http://www.w3.org/2001/XMLSchema}string"/>
             *         &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string"/>
             *         &lt;element name="length" type="{http://www.w3.org/2001/XMLSchema}byte"/>
             *         &lt;element name="precision" type="{http://www.w3.org/2001/XMLSchema}byte"/>
             *         &lt;element name="conversion_mask" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
             *         &lt;element name="date_format_lenient" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
             *         &lt;element name="encoding" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
             *         &lt;element name="decimal_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
             *         &lt;element name="grouping_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
             *         &lt;element name="currency_symbol" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
             *         &lt;element name="storage_type" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "name",
                "rename",
                "type",
                "length",
                "precision",
                "conversionMask",
                "dateFormatLenient",
                "encoding",
                "decimalSymbol",
                "groupingSymbol",
                "currencySymbol",
                "storageType"
            })
            @Entity(name = "Transformation$Step$Fields$Meta")
            @Table(name = "META")
            @Inheritance(strategy = InheritanceType.JOINED)
            public static class Meta
                implements Equals, HashCode
            {

                @XmlElement(required = true)
                protected String name;
                @XmlElement(required = true)
                protected String rename;
                @XmlElement(required = true)
                protected String type;
                protected byte length;
                protected byte precision;
                @XmlElement(name = "conversion_mask", required = true)
                protected Object conversionMask;
                @XmlElement(name = "date_format_lenient")
                protected boolean dateFormatLenient;
                @XmlElement(required = true)
                protected Object encoding;
                @XmlElement(name = "decimal_symbol", required = true)
                protected Object decimalSymbol;
                @XmlElement(name = "grouping_symbol", required = true)
                protected Object groupingSymbol;
                @XmlElement(name = "currency_symbol", required = true)
                protected Object currencySymbol;
                @XmlElement(name = "storage_type", required = true)
                protected Object storageType;
                @XmlAttribute(name = "Hjid")
                protected Long hjid;
                public final static String ConversionMaskObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
                public final static String EncodingObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
                public final static String DecimalSymbolObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
                public final static String GroupingSymbolObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
                public final static String CurrencySymbolObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";
                public final static String StorageTypeObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";

                /**
                 * Gets the value of the name property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                @Basic
                @Column(name = "NAME_", length = 255)
                public String getName() {
                    return name;
                }

                /**
                 * Sets the value of the name property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setName(String value) {
                    this.name = value;
                }

                /**
                 * Gets the value of the rename property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                @Basic
                @Column(name = "RENAME_", length = 255)
                public String getRename() {
                    return rename;
                }

                /**
                 * Sets the value of the rename property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setRename(String value) {
                    this.rename = value;
                }

                /**
                 * Gets the value of the type property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                @Basic
                @Column(name = "TYPE_", length = 255)
                public String getType() {
                    return type;
                }

                /**
                 * Sets the value of the type property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setType(String value) {
                    this.type = value;
                }

                /**
                 * Gets the value of the length property.
                 * 
                 */
                @Basic
                @Column(name = "LENGTH_", precision = 3, scale = 0)
                public byte getLength() {
                    return length;
                }

                /**
                 * Sets the value of the length property.
                 * 
                 */
                public void setLength(byte value) {
                    this.length = value;
                }

                /**
                 * Gets the value of the precision property.
                 * 
                 */
                @Basic
                @Column(name = "PRECISION_", precision = 3, scale = 0)
                public byte getPrecision() {
                    return precision;
                }

                /**
                 * Sets the value of the precision property.
                 * 
                 */
                public void setPrecision(byte value) {
                    this.precision = value;
                }

                /**
                 * Gets the value of the conversionMask property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Object }
                 *     
                 */
                @Transient
                public Object getConversionMask() {
                    return conversionMask;
                }

                /**
                 * Sets the value of the conversionMask property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Object }
                 *     
                 */
                public void setConversionMask(Object value) {
                    this.conversionMask = value;
                }

                /**
                 * Gets the value of the dateFormatLenient property.
                 * 
                 */
                @Basic
                @Column(name = "DATEFORMATLENIENT")
                public boolean isDateFormatLenient() {
                    return dateFormatLenient;
                }

                /**
                 * Sets the value of the dateFormatLenient property.
                 * 
                 */
                public void setDateFormatLenient(boolean value) {
                    this.dateFormatLenient = value;
                }

                /**
                 * Gets the value of the encoding property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Object }
                 *     
                 */
                @Transient
                public Object getEncoding() {
                    return encoding;
                }

                /**
                 * Sets the value of the encoding property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Object }
                 *     
                 */
                public void setEncoding(Object value) {
                    this.encoding = value;
                }

                /**
                 * Gets the value of the decimalSymbol property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Object }
                 *     
                 */
                @Transient
                public Object getDecimalSymbol() {
                    return decimalSymbol;
                }

                /**
                 * Sets the value of the decimalSymbol property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Object }
                 *     
                 */
                public void setDecimalSymbol(Object value) {
                    this.decimalSymbol = value;
                }

                /**
                 * Gets the value of the groupingSymbol property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Object }
                 *     
                 */
                @Transient
                public Object getGroupingSymbol() {
                    return groupingSymbol;
                }

                /**
                 * Sets the value of the groupingSymbol property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Object }
                 *     
                 */
                public void setGroupingSymbol(Object value) {
                    this.groupingSymbol = value;
                }

                /**
                 * Gets the value of the currencySymbol property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Object }
                 *     
                 */
                @Transient
                public Object getCurrencySymbol() {
                    return currencySymbol;
                }

                /**
                 * Sets the value of the currencySymbol property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Object }
                 *     
                 */
                public void setCurrencySymbol(Object value) {
                    this.currencySymbol = value;
                }

                /**
                 * Gets the value of the storageType property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Object }
                 *     
                 */
                @Transient
                public Object getStorageType() {
                    return storageType;
                }

                /**
                 * Sets the value of the storageType property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Object }
                 *     
                 */
                public void setStorageType(Object value) {
                    this.storageType = value;
                }

                /**
                 * Gets the value of the hjid property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Long }
                 *     
                 */
                @Id
                @Column(name = "HJID")
                @GeneratedValue(strategy = GenerationType.AUTO)
                public Long getHjid() {
                    return hjid;
                }

                /**
                 * Sets the value of the hjid property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Long }
                 *     
                 */
                public void setHjid(Long value) {
                    this.hjid = value;
                }

                @Basic
                @Column(name = "CONVERSIONMASKOBJECT")
                public String getConversionMaskObject() {
                    if (JAXBContextUtils.isMarshallable(ConversionMaskObjectContextPath, this.getConversionMask())) {
                        return JAXBContextUtils.marshal(ConversionMaskObjectContextPath, this.getConversionMask());
                    } else {
                        return null;
                    }
                }

                public void setConversionMaskObject(String target) {
                    if (target!= null) {
                        setConversionMask(JAXBContextUtils.unmarshal(ConversionMaskObjectContextPath, target));
                    }
                }

                @Basic
                @Column(name = "ENCODINGOBJECT")
                public String getEncodingObject() {
                    if (JAXBContextUtils.isMarshallable(EncodingObjectContextPath, this.getEncoding())) {
                        return JAXBContextUtils.marshal(EncodingObjectContextPath, this.getEncoding());
                    } else {
                        return null;
                    }
                }

                public void setEncodingObject(String target) {
                    if (target!= null) {
                        setEncoding(JAXBContextUtils.unmarshal(EncodingObjectContextPath, target));
                    }
                }

                @Basic
                @Column(name = "DECIMALSYMBOLOBJECT")
                public String getDecimalSymbolObject() {
                    if (JAXBContextUtils.isMarshallable(DecimalSymbolObjectContextPath, this.getDecimalSymbol())) {
                        return JAXBContextUtils.marshal(DecimalSymbolObjectContextPath, this.getDecimalSymbol());
                    } else {
                        return null;
                    }
                }

                public void setDecimalSymbolObject(String target) {
                    if (target!= null) {
                        setDecimalSymbol(JAXBContextUtils.unmarshal(DecimalSymbolObjectContextPath, target));
                    }
                }

                @Basic
                @Column(name = "GROUPINGSYMBOLOBJECT")
                public String getGroupingSymbolObject() {
                    if (JAXBContextUtils.isMarshallable(GroupingSymbolObjectContextPath, this.getGroupingSymbol())) {
                        return JAXBContextUtils.marshal(GroupingSymbolObjectContextPath, this.getGroupingSymbol());
                    } else {
                        return null;
                    }
                }

                public void setGroupingSymbolObject(String target) {
                    if (target!= null) {
                        setGroupingSymbol(JAXBContextUtils.unmarshal(GroupingSymbolObjectContextPath, target));
                    }
                }

                @Basic
                @Column(name = "CURRENCYSYMBOLOBJECT")
                public String getCurrencySymbolObject() {
                    if (JAXBContextUtils.isMarshallable(CurrencySymbolObjectContextPath, this.getCurrencySymbol())) {
                        return JAXBContextUtils.marshal(CurrencySymbolObjectContextPath, this.getCurrencySymbol());
                    } else {
                        return null;
                    }
                }

                public void setCurrencySymbolObject(String target) {
                    if (target!= null) {
                        setCurrencySymbol(JAXBContextUtils.unmarshal(CurrencySymbolObjectContextPath, target));
                    }
                }

                @Basic
                @Column(name = "STORAGETYPEOBJECT")
                public String getStorageTypeObject() {
                    if (JAXBContextUtils.isMarshallable(StorageTypeObjectContextPath, this.getStorageType())) {
                        return JAXBContextUtils.marshal(StorageTypeObjectContextPath, this.getStorageType());
                    } else {
                        return null;
                    }
                }

                public void setStorageTypeObject(String target) {
                    if (target!= null) {
                        setStorageType(JAXBContextUtils.unmarshal(StorageTypeObjectContextPath, target));
                    }
                }

                public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                    if (!(object instanceof Transformation.Step.Fields.Meta)) {
                        return false;
                    }
                    if (this == object) {
                        return true;
                    }
                    final Transformation.Step.Fields.Meta that = ((Transformation.Step.Fields.Meta) object);
                    {
                        String lhsName;
                        lhsName = this.getName();
                        String rhsName;
                        rhsName = that.getName();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                            return false;
                        }
                    }
                    {
                        String lhsRename;
                        lhsRename = this.getRename();
                        String rhsRename;
                        rhsRename = that.getRename();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "rename", lhsRename), LocatorUtils.property(thatLocator, "rename", rhsRename), lhsRename, rhsRename)) {
                            return false;
                        }
                    }
                    {
                        String lhsType;
                        lhsType = this.getType();
                        String rhsType;
                        rhsType = that.getType();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                            return false;
                        }
                    }
                    {
                        byte lhsLength;
                        lhsLength = this.getLength();
                        byte rhsLength;
                        rhsLength = that.getLength();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "length", lhsLength), LocatorUtils.property(thatLocator, "length", rhsLength), lhsLength, rhsLength)) {
                            return false;
                        }
                    }
                    {
                        byte lhsPrecision;
                        lhsPrecision = this.getPrecision();
                        byte rhsPrecision;
                        rhsPrecision = that.getPrecision();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "precision", lhsPrecision), LocatorUtils.property(thatLocator, "precision", rhsPrecision), lhsPrecision, rhsPrecision)) {
                            return false;
                        }
                    }
                    {
                        Object lhsConversionMask;
                        lhsConversionMask = this.getConversionMask();
                        Object rhsConversionMask;
                        rhsConversionMask = that.getConversionMask();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "conversionMask", lhsConversionMask), LocatorUtils.property(thatLocator, "conversionMask", rhsConversionMask), lhsConversionMask, rhsConversionMask)) {
                            return false;
                        }
                    }
                    {
                        boolean lhsDateFormatLenient;
                        lhsDateFormatLenient = this.isDateFormatLenient();
                        boolean rhsDateFormatLenient;
                        rhsDateFormatLenient = that.isDateFormatLenient();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "dateFormatLenient", lhsDateFormatLenient), LocatorUtils.property(thatLocator, "dateFormatLenient", rhsDateFormatLenient), lhsDateFormatLenient, rhsDateFormatLenient)) {
                            return false;
                        }
                    }
                    {
                        Object lhsEncoding;
                        lhsEncoding = this.getEncoding();
                        Object rhsEncoding;
                        rhsEncoding = that.getEncoding();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "encoding", lhsEncoding), LocatorUtils.property(thatLocator, "encoding", rhsEncoding), lhsEncoding, rhsEncoding)) {
                            return false;
                        }
                    }
                    {
                        Object lhsDecimalSymbol;
                        lhsDecimalSymbol = this.getDecimalSymbol();
                        Object rhsDecimalSymbol;
                        rhsDecimalSymbol = that.getDecimalSymbol();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "decimalSymbol", lhsDecimalSymbol), LocatorUtils.property(thatLocator, "decimalSymbol", rhsDecimalSymbol), lhsDecimalSymbol, rhsDecimalSymbol)) {
                            return false;
                        }
                    }
                    {
                        Object lhsGroupingSymbol;
                        lhsGroupingSymbol = this.getGroupingSymbol();
                        Object rhsGroupingSymbol;
                        rhsGroupingSymbol = that.getGroupingSymbol();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "groupingSymbol", lhsGroupingSymbol), LocatorUtils.property(thatLocator, "groupingSymbol", rhsGroupingSymbol), lhsGroupingSymbol, rhsGroupingSymbol)) {
                            return false;
                        }
                    }
                    {
                        Object lhsCurrencySymbol;
                        lhsCurrencySymbol = this.getCurrencySymbol();
                        Object rhsCurrencySymbol;
                        rhsCurrencySymbol = that.getCurrencySymbol();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "currencySymbol", lhsCurrencySymbol), LocatorUtils.property(thatLocator, "currencySymbol", rhsCurrencySymbol), lhsCurrencySymbol, rhsCurrencySymbol)) {
                            return false;
                        }
                    }
                    {
                        Object lhsStorageType;
                        lhsStorageType = this.getStorageType();
                        Object rhsStorageType;
                        rhsStorageType = that.getStorageType();
                        if (!strategy.equals(LocatorUtils.property(thisLocator, "storageType", lhsStorageType), LocatorUtils.property(thatLocator, "storageType", rhsStorageType), lhsStorageType, rhsStorageType)) {
                            return false;
                        }
                    }
                    return true;
                }

                public boolean equals(Object object) {
                    final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                    return equals(null, null, object, strategy);
                }

                public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                    int currentHashCode = 1;
                    {
                        String theName;
                        theName = this.getName();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
                    }
                    {
                        String theRename;
                        theRename = this.getRename();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rename", theRename), currentHashCode, theRename);
                    }
                    {
                        String theType;
                        theType = this.getType();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                    }
                    {
                        byte theLength;
                        theLength = this.getLength();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "length", theLength), currentHashCode, theLength);
                    }
                    {
                        byte thePrecision;
                        thePrecision = this.getPrecision();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "precision", thePrecision), currentHashCode, thePrecision);
                    }
                    {
                        Object theConversionMask;
                        theConversionMask = this.getConversionMask();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "conversionMask", theConversionMask), currentHashCode, theConversionMask);
                    }
                    {
                        boolean theDateFormatLenient;
                        theDateFormatLenient = this.isDateFormatLenient();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateFormatLenient", theDateFormatLenient), currentHashCode, theDateFormatLenient);
                    }
                    {
                        Object theEncoding;
                        theEncoding = this.getEncoding();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "encoding", theEncoding), currentHashCode, theEncoding);
                    }
                    {
                        Object theDecimalSymbol;
                        theDecimalSymbol = this.getDecimalSymbol();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "decimalSymbol", theDecimalSymbol), currentHashCode, theDecimalSymbol);
                    }
                    {
                        Object theGroupingSymbol;
                        theGroupingSymbol = this.getGroupingSymbol();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "groupingSymbol", theGroupingSymbol), currentHashCode, theGroupingSymbol);
                    }
                    {
                        Object theCurrencySymbol;
                        theCurrencySymbol = this.getCurrencySymbol();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currencySymbol", theCurrencySymbol), currentHashCode, theCurrencySymbol);
                    }
                    {
                        Object theStorageType;
                        theStorageType = this.getStorageType();
                        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "storageType", theStorageType), currentHashCode, theStorageType);
                    }
                    return currentHashCode;
                }

                public int hashCode() {
                    final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                    return this.hashCode(null, strategy);
                }

            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="xloc" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
         *         &lt;element name="yloc" type="{http://www.w3.org/2001/XMLSchema}unsignedShort"/>
         *         &lt;element name="draw" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "xloc",
            "yloc",
            "draw"
        })
        @Entity(name = "Transformation$Step$GUI")
        @Table(name = "GUI")
        @Inheritance(strategy = InheritanceType.JOINED)
        public static class GUI
            implements Equals, HashCode
        {

            @XmlSchemaType(name = "unsignedShort")
            protected int xloc;
            @XmlSchemaType(name = "unsignedShort")
            protected int yloc;
            @XmlElement(required = true)
            protected String draw;
            @XmlAttribute(name = "Hjid")
            protected Long hjid;

            /**
             * Gets the value of the xloc property.
             * 
             */
            @Basic
            @Column(name = "XLOC", precision = 5, scale = 0)
            public int getXloc() {
                return xloc;
            }

            /**
             * Sets the value of the xloc property.
             * 
             */
            public void setXloc(int value) {
                this.xloc = value;
            }

            /**
             * Gets the value of the yloc property.
             * 
             */
            @Basic
            @Column(name = "YLOC", precision = 5, scale = 0)
            public int getYloc() {
                return yloc;
            }

            /**
             * Sets the value of the yloc property.
             * 
             */
            public void setYloc(int value) {
                this.yloc = value;
            }

            /**
             * Gets the value of the draw property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "DRAW", length = 255)
            public String getDraw() {
                return draw;
            }

            /**
             * Sets the value of the draw property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setDraw(String value) {
                this.draw = value;
            }

            /**
             * Gets the value of the hjid property.
             * 
             * @return
             *     possible object is
             *     {@link Long }
             *     
             */
            @Id
            @Column(name = "HJID")
            @GeneratedValue(strategy = GenerationType.AUTO)
            public Long getHjid() {
                return hjid;
            }

            /**
             * Sets the value of the hjid property.
             * 
             * @param value
             *     allowed object is
             *     {@link Long }
             *     
             */
            public void setHjid(Long value) {
                this.hjid = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof Transformation.Step.GUI)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final Transformation.Step.GUI that = ((Transformation.Step.GUI) object);
                {
                    int lhsXloc;
                    lhsXloc = this.getXloc();
                    int rhsXloc;
                    rhsXloc = that.getXloc();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "xloc", lhsXloc), LocatorUtils.property(thatLocator, "xloc", rhsXloc), lhsXloc, rhsXloc)) {
                        return false;
                    }
                }
                {
                    int lhsYloc;
                    lhsYloc = this.getYloc();
                    int rhsYloc;
                    rhsYloc = that.getYloc();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "yloc", lhsYloc), LocatorUtils.property(thatLocator, "yloc", rhsYloc), lhsYloc, rhsYloc)) {
                        return false;
                    }
                }
                {
                    String lhsDraw;
                    lhsDraw = this.getDraw();
                    String rhsDraw;
                    rhsDraw = that.getDraw();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "draw", lhsDraw), LocatorUtils.property(thatLocator, "draw", rhsDraw), lhsDraw, rhsDraw)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    int theXloc;
                    theXloc = this.getXloc();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "xloc", theXloc), currentHashCode, theXloc);
                }
                {
                    int theYloc;
                    theYloc = this.getYloc();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "yloc", theYloc), currentHashCode, theYloc);
                }
                {
                    String theDraw;
                    theDraw = this.getDraw();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "draw", theDraw), currentHashCode, theDraw);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="method" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *         &lt;element name="schema_name" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "method",
            "schemaName"
        })
        @Entity(name = "Transformation$Step$Partitioning")
        @Table(name = "PARTITIONING")
        @Inheritance(strategy = InheritanceType.JOINED)
        public static class Partitioning
            implements Equals, HashCode
        {

            @XmlElement(required = true)
            protected String method;
            @XmlElement(name = "schema_name", required = true)
            protected Object schemaName;
            @XmlAttribute(name = "Hjid")
            protected Long hjid;
            public final static String SchemaNameObjectContextPath = "org.pentaho.kettle.schema.kettle.trans";

            /**
             * Gets the value of the method property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "METHOD_", length = 255)
            public String getMethod() {
                return method;
            }

            /**
             * Sets the value of the method property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setMethod(String value) {
                this.method = value;
            }

            /**
             * Gets the value of the schemaName property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            @Transient
            public Object getSchemaName() {
                return schemaName;
            }

            /**
             * Sets the value of the schemaName property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setSchemaName(Object value) {
                this.schemaName = value;
            }

            /**
             * Gets the value of the hjid property.
             * 
             * @return
             *     possible object is
             *     {@link Long }
             *     
             */
            @Id
            @Column(name = "HJID")
            @GeneratedValue(strategy = GenerationType.AUTO)
            public Long getHjid() {
                return hjid;
            }

            /**
             * Sets the value of the hjid property.
             * 
             * @param value
             *     allowed object is
             *     {@link Long }
             *     
             */
            public void setHjid(Long value) {
                this.hjid = value;
            }

            @Basic
            @Column(name = "SCHEMANAMEOBJECT")
            public String getSchemaNameObject() {
                if (JAXBContextUtils.isMarshallable(SchemaNameObjectContextPath, this.getSchemaName())) {
                    return JAXBContextUtils.marshal(SchemaNameObjectContextPath, this.getSchemaName());
                } else {
                    return null;
                }
            }

            public void setSchemaNameObject(String target) {
                if (target!= null) {
                    setSchemaName(JAXBContextUtils.unmarshal(SchemaNameObjectContextPath, target));
                }
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof Transformation.Step.Partitioning)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final Transformation.Step.Partitioning that = ((Transformation.Step.Partitioning) object);
                {
                    String lhsMethod;
                    lhsMethod = this.getMethod();
                    String rhsMethod;
                    rhsMethod = that.getMethod();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "method", lhsMethod), LocatorUtils.property(thatLocator, "method", rhsMethod), lhsMethod, rhsMethod)) {
                        return false;
                    }
                }
                {
                    Object lhsSchemaName;
                    lhsSchemaName = this.getSchemaName();
                    Object rhsSchemaName;
                    rhsSchemaName = that.getSchemaName();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "schemaName", lhsSchemaName), LocatorUtils.property(thatLocator, "schemaName", rhsSchemaName), lhsSchemaName, rhsSchemaName)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theMethod;
                    theMethod = this.getMethod();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "method", theMethod), currentHashCode, theMethod);
                }
                {
                    Object theSchemaName;
                    theSchemaName = this.getSchemaName();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "schemaName", theSchemaName), currentHashCode, theSchemaName);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="input" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *         &lt;element name="output" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "input",
            "output"
        })
        @Entity(name = "Transformation$Step$Remotesteps")
        @Table(name = "REMOTESTEPS")
        @Inheritance(strategy = InheritanceType.JOINED)
        public static class Remotesteps
            implements Equals, HashCode
        {

            @XmlElement(required = true)
            protected String input;
            @XmlElement(required = true)
            protected String output;
            @XmlAttribute(name = "Hjid")
            protected Long hjid;

            /**
             * Gets the value of the input property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "INPUT_", length = 255)
            public String getInput() {
                return input;
            }

            /**
             * Sets the value of the input property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setInput(String value) {
                this.input = value;
            }

            /**
             * Gets the value of the output property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "OUTPUT_", length = 255)
            public String getOutput() {
                return output;
            }

            /**
             * Sets the value of the output property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setOutput(String value) {
                this.output = value;
            }

            /**
             * Gets the value of the hjid property.
             * 
             * @return
             *     possible object is
             *     {@link Long }
             *     
             */
            @Id
            @Column(name = "HJID")
            @GeneratedValue(strategy = GenerationType.AUTO)
            public Long getHjid() {
                return hjid;
            }

            /**
             * Sets the value of the hjid property.
             * 
             * @param value
             *     allowed object is
             *     {@link Long }
             *     
             */
            public void setHjid(Long value) {
                this.hjid = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof Transformation.Step.Remotesteps)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final Transformation.Step.Remotesteps that = ((Transformation.Step.Remotesteps) object);
                {
                    String lhsInput;
                    lhsInput = this.getInput();
                    String rhsInput;
                    rhsInput = that.getInput();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "input", lhsInput), LocatorUtils.property(thatLocator, "input", rhsInput), lhsInput, rhsInput)) {
                        return false;
                    }
                }
                {
                    String lhsOutput;
                    lhsOutput = this.getOutput();
                    String rhsOutput;
                    rhsOutput = that.getOutput();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "output", lhsOutput), LocatorUtils.property(thatLocator, "output", rhsOutput), lhsOutput, rhsOutput)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theInput;
                    theInput = this.getInput();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "input", theInput), currentHashCode, theInput);
                }
                {
                    String theOutput;
                    theOutput = this.getOutput();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "output", theOutput), currentHashCode, theOutput);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

        }

    }

}

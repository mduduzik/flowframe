{
        "title":"Basic",
        "namespace":"http://b3mn.org/stencilset/reporting#",
        "description":"Simple stencil set for Reporting style diagrams.",
	"propertyPackages": [],
        "stencils": [
		{
			"type":				"node",
			"id":				"ReportingDiagram",
			"title":			"Reporting Diagram",
			"groups":			["Diagram"],
			"description":		"A Reporting Diagram.",
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"800\"    height=\"600\"    version=\"1.0\">   <defs></defs>   <g pointer-events=\"fill\" >     <polygon stroke=\"black\" fill=\"black\" stroke-width=\"1\" points=\"0,0 0,590 9,599 799,599 799,9 790,0\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" />     <rect id=\"diagramcanvas\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"790\" height=\"590\" stroke=\"black\" stroke-width=\"2\" fill=\"white\" />      <text font-size=\"22\" id=\"diagramtext\" x=\"400\" y=\"25\" oryx:align=\"top center\" stroke=\"black\"></text>   </g> </svg> ",
			"icon":				"data.object.png",
			"mayBeRoot":		true,
			"hide":				true,
			"roles":			["canContainArtifacts"]
		},
		{
			"type": "node",
			"id": "node-datasource",
			"title": "Data Source",
			"groups": ["Input"],
			"description": "A data source that can be used to back reports etc.",
			"view": "data.store.svg",
			"icon": "data.store.png",
			"roles": ["input"],
			"properties": [
				{
					"id": "dataSource",
					"type": "Choice",
					"restUrl": "/backend/poem/endpoint",
					"restMethod": "GET",
					"restParams": {
						"userId": "skeswa",
						"call": "getEndpointsByTenant"
					},
					"title": "Data Source",
                                        "description": "Configuration for this data source.",
                                        "readonly":false,
                                        "optional":false,
					"items": []
				}
			]
		},
		{
		        "type": "node",
		        "id": "node-report",
		        "title": "Report Template",   
		        "groups": ["Output"],
		        "description": "A report that relates data.",
		        "view": "data.object.svg",
		        "icon": "data.object.png",
		        "roles": ["output"],
				"properties": [
					{
						"id": "template",
						"type": "Choice",
						"restUrl": "/backend/poem/reporting",
						"restMethod": "GET",
						"restParams": {
							"userId": "skeswa",
							"call": "getReportTemplatesByTenant"
						},
						"title": "Report Template",
											"description": "Configuration for this data source.",
											"readonly":false,
											"optional":false,
						"items": []
					}
				]
		},
		{
		        "type": "node",
		        "id": "node-start-event",
		        "title": "Start Event",   
		        "groups": ["Event"],
		        "description": "The event that begins a job.",
		        "view": "start.event.svg",
		        "icon": "start.event.png",
		        "roles": ["event", "start"]
		},
		{
		        "type": "node",
		        "id": "node-end-event",
		        "title": "End Event",   
		        "groups": ["Event"],
		        "description": "The event that ends a job.",
		        "view": "end.event.svg",
		        "icon": "end.event.png",
		        "roles": ["event", "end"]
		},
		{
                        "type": "edge",
                        "id": "connector",
                        "title": "Connector",     
                        "groups": ["Relationship"],
                        "description": "A precedes edges",
                        "view": "edge.precedes.svg",
                        "icon": "association.unidirectional.png",
                        "roles": ["controlflow"]
                }
	],
	"rules": {
		"connectionRules": [
                        {
                                "role": "controlflow",
                                "connects": [
					{
                                                "from": "start",
                                                "to": "input"
                                        },
                                	{
                                                "from": "input",
                                                "to": "output"
                                        },
					{
                                                "from": "output",
                                                "to": "end"
                                        }
                                ],
                        }
                ],
		"containmentRules": [
			{
				"role": "canContainArtifacts",
				"contains": [
					"output",
					"input",
					"event"
				]
			}
		]
	}
}
